{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\nexport const configureStore = initialState => {\n  const logger = createLogger();\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middleware = [thunk, logger];\n  const store = createStore(rootReducer, {\n    app: initialState\n  }, composeEnhancers(applyMiddleware(...middleware)));\n  return store;\n};\nexport default configureStore;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/store.ts"],"names":["applyMiddleware","compose","createStore","createLogger","rootReducer","thunk","configureStore","initialState","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","store","app"],"mappings":"AAGA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAMA,OAAO,MAAMC,cAAc,GAAIC,YAAD,IAA4B;AACtD,QAAMC,MAAM,GAAGL,YAAY,EAA3B;AACA,QAAMM,gBAAgB,GAAIC,MAAD,CAAgBC,oCAAhB,IAAwDV,OAAjF;AACA,QAAMW,UAAU,GAAG,CAACP,KAAD,EAAQG,MAAR,CAAnB;AAEA,QAAMK,KAAK,GAAGX,WAAW,CACrBE,WADqB,EAErB;AACIU,IAAAA,GAAG,EAAEP;AADT,GAFqB,EAKrBE,gBAAgB,CAACT,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CALK,CAAzB;AAOA,SAAOC,KAAP;AACH,CAbM;AAeP,eAAeP,cAAf","sourcesContent":["import { AnyAction } from 'redux';\r\nimport { AppState } from './appState';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { rootReducer } from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport type AppThunk<R> = ThunkAction<R, AppState, unknown, AnyAction>;\r\nexport type AppDispatch = ThunkDispatch<AppState, unknown, AnyAction>;\r\n\r\n\r\nexport const configureStore = (initialState: AppState) => {\r\n    const logger = createLogger();\r\n    const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const middleware = [thunk, logger];\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        {\r\n            app: initialState,\r\n        },\r\n        composeEnhancers(applyMiddleware(...middleware))\r\n    );\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}