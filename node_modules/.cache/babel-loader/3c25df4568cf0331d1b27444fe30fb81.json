{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import'./styles.css';import Menu from'../menu';import Project from'../project';import{getProjects}from'../../redux/fetch';import{isExpanded,projects}from'../../redux/app/selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var fetchProjects=_ref.fetchProjects;useEffect(function(){console.log('invoke getProjectsAsync');fetchProjects();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Menu,{}),/*#__PURE__*/_jsx(Project,{})]});};var mapStateToProps=function mapStateToProps(state){return{expand:isExpanded(state),projects:projects(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchProjects:function fetchProjects(){return dispatch(getProjects());}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx"],"names":["React","useEffect","connect","Menu","Project","getProjects","isExpanded","projects","App","fetchProjects","console","log","mapStateToProps","state","expand","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAoBC,SAApB,KAAqC,OAArC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,cAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAASC,WAAT,KAA4B,mBAA5B,CAGA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,2BAArC,C,wFAiBA,GAAMC,CAAAA,GAAiB,CAAG,QAApBA,CAAAA,GAAoB,MAAuB,IAApBC,CAAAA,aAAoB,MAApBA,aAAoB,CAC/CR,SAAS,CAAC,UAAM,CACdS,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAF,aAAa,GACd,CAHQ,CAGN,EAHM,CAAT,CAMA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,IAAD,IADF,cAEE,KAAC,OAAD,IAFF,GADF,CAMD,CAbD,CAeA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAsC,CAC5DC,MAAM,CAAER,UAAU,CAACO,KAAD,CAD0C,CAE5DN,QAAQ,CAAEA,QAAQ,CAACM,KAAD,CAF0C,CAAtC,EAAxB,CAKA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CACzBC,QADyB,QAEH,CACtBP,aAAa,CAAE,+BAAMO,CAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAd,EADO,CAFG,EAA3B,CAMA,cAAeH,CAAAA,OAAO,CACpBU,eADoB,CAEpBG,kBAFoB,CAAP,CAGbP,GAHa,CAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProjectProperties } from '../../redux/appState';\r\nimport './styles.css';\r\nimport Menu from '../menu';\r\nimport Project from '../project';\r\nimport { getProjects } from '../../redux/fetch';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { isExpanded, projects } from '../../redux/app/selectors';\r\n\r\nexport interface AppOwnProps {\r\n\r\n}\r\n\r\nexport interface AppStateProps {\r\n  expand: boolean;\r\n  projects: ProjectProperties[];\r\n}\r\n\r\nexport interface AppDispatchProps {\r\n  fetchProjects: () => void;\r\n}\r\n\r\nexport type AppProps = AppOwnProps & AppStateProps & AppDispatchProps;\r\n\r\nconst App: FC<AppProps> = ({ fetchProjects }) => {\r\n  useEffect(() => {\r\n    console.log('invoke getProjectsAsync');\r\n    fetchProjects();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu />\r\n      <Project />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): AppStateProps => ({\r\n  expand: isExpanded(state),\r\n  projects: projects(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: AppDispatch\r\n): AppDispatchProps => ({\r\n  fetchProjects: () => dispatch(getProjects())\r\n});\r\n\r\nexport default connect<AppStateProps, AppDispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);"]},"metadata":{},"sourceType":"module"}