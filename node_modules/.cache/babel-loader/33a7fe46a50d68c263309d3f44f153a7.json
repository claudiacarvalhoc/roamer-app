{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './styles.css';\nimport Menu from '../menu';\nimport Project from '../project';\nimport { fecthProjects } from '../../redux/fetch';\nimport { isExpanded, projects } from '../../redux/app/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  projects,\n  fetchProjects\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  expand: isExpanded(state),\n  projects: projects(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProjects: () => dispatch(fecthProjects())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx"],"names":["React","useEffect","connect","Menu","Project","fecthProjects","isExpanded","projects","App","fetchProjects","mapStateToProps","state","expand","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,2BAArC;;;AAiBA,MAAMC,GAAiB,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,KAAiC;AAAA;;AACzDR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAZD;;GAAMD,G;;KAAAA,G;;AAcN,MAAME,eAAe,GAAIC,KAAD,KAAsC;AAC5DC,EAAAA,MAAM,EAAEN,UAAU,CAACK,KAAD,CAD0C;AAE5DJ,EAAAA,QAAQ,EAAEA,QAAQ,CAACI,KAAD;AAF0C,CAAtC,CAAxB;;AAKA,MAAME,kBAAkB,GACtBC,QADyB,KAEH;AACtBL,EAAAA,aAAa,EAAE,MAAMK,QAAQ,CAACT,aAAa,EAAd;AADP,CAFG,CAA3B;;AAMA,eAAeH,OAAO,CACpBQ,eADoB,EAEpBG,kBAFoB,CAAP,CAGbL,GAHa,CAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProjectProperties } from '../../redux/appState';\r\nimport './styles.css';\r\nimport Menu from '../menu';\r\nimport Project from '../project';\r\nimport { fecthProjects } from '../../redux/fetch';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { isExpanded, projects } from '../../redux/app/selectors';\r\n\r\nexport interface AppOwnProps {\r\n\r\n}\r\n\r\nexport interface AppStateProps {\r\n  expand: boolean;\r\n  projects: ProjectProperties[];\r\n}\r\n\r\nexport interface AppDispatchProps {\r\n  fetchProjects: () => void;\r\n}\r\n\r\nexport type AppProps = AppOwnProps & AppStateProps & AppDispatchProps;\r\n\r\nconst App: FC<AppProps> = ({ projects, fetchProjects }) => {\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu />\r\n      <Project />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): AppStateProps => ({\r\n  expand: isExpanded(state),\r\n  projects: projects(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: AppDispatch\r\n): AppDispatchProps => ({\r\n  fetchProjects: () => dispatch(fecthProjects())\r\n});\r\n\r\nexport default connect<AppStateProps, AppDispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);"]},"metadata":{},"sourceType":"module"}