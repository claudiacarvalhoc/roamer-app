{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx\";\nimport React from 'react';\n// import cn from 'classnames';\nimport styles from './summary.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../progressbar';\nimport Label from '../label';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Summary = ({\n  project,\n  texts\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.summaryTitle,\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      className: styles.progressBar,\n      percentage: project.done,\n      size: 'small'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.doneText,\n        value: `${project.done}%`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.baseWordsText,\n        value: `${project.baseWords}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.teamText,\n        value: `${project.team}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.keysText,\n        value: `${project.keys}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.qaIssuesText,\n        value: `${project.issues}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Summary;\n\nconst mapStateToProps = state => ({\n  texts: projectTexts(state)\n});\n\nexport default connect(mapStateToProps)(Summary);\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx"],"names":["React","styles","projectTexts","connect","ProgressBar","Label","Summary","project","texts","summaryTitle","name","progressBar","done","line","doneText","baseWordsText","baseWords","teamText","team","keysText","keys","qaIssuesText","issues","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAGA;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;;AAaA,MAAMC,OAAyB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACtD,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEP,MAAM,CAACQ,YAAtB;AAAA,gBAAqCF,OAAO,CAACG;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAET,MAAM,CAACU,WAA/B;AAA4C,MAAA,UAAU,EAAEJ,OAAO,CAACK,IAAhE;AAAsE,MAAA,IAAI,EAAE;AAA5E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACY,IAAvB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEL,KAAK,CAACM,QAAnB;AAA6B,QAAA,KAAK,EAAG,GAAEP,OAAO,CAACK,IAAK,GAApD;AAAwD,QAAA,WAAW,EAAE;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEJ,KAAK,CAACO,aAAnB;AAAkC,QAAA,KAAK,EAAG,GAAER,OAAO,CAACS,SAAU,EAA9D;AAAiE,QAAA,WAAW,EAAE;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACY,IAAvB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEL,KAAK,CAACS,QAAnB;AAA6B,QAAA,KAAK,EAAG,GAAEV,OAAO,CAACW,IAAK,EAApD;AAAuD,QAAA,WAAW,EAAE;AAApE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEV,KAAK,CAACW,QAAnB;AAA6B,QAAA,KAAK,EAAG,GAAEZ,OAAO,CAACa,IAAK,EAApD;AAAuD,QAAA,WAAW,EAAE;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACY,IAAvB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEL,KAAK,CAACa,YAAnB;AAAiC,QAAA,KAAK,EAAG,GAAEd,OAAO,CAACe,MAAO,EAA1D;AAA6D,QAAA,WAAW,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AAoBH,CArBD;;KAAMhB,O;;AAuBN,MAAMiB,eAAe,GAAIC,KAAD,KAA0C;AAC9DhB,EAAAA,KAAK,EAAEN,YAAY,CAACsB,KAAD;AAD2C,CAA1C,CAAxB;;AAIA,eAAerB,OAAO,CAClBoB,eADkB,CAAP,CAEbjB,OAFa,CAAf","sourcesContent":["import React, { FC } from 'react';\r\nimport { ProjectProperties, ProjectTextsProperties } from '../../redux/appState';\r\nimport { RootState } from '../../redux/reducers';\r\n// import cn from 'classnames';\r\nimport styles from './summary.module.css';\r\nimport { projectTexts } from '../../redux/app/selectors';\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '../progressbar';\r\nimport Label from '../label';\r\n\r\n\r\nexport interface SummaryOwnProps {\r\n    project: ProjectProperties;\r\n}\r\n\r\nexport interface SummaryStateProps {\r\n    texts: ProjectTextsProperties;\r\n}\r\n\r\ntype SummaryProps = SummaryOwnProps & SummaryStateProps;\r\n\r\nconst Summary: FC<SummaryProps> = ({ project, texts }) => {\r\n    return (\r\n        <>\r\n            <h1 className={styles.summaryTitle}>{project.name}</h1>\r\n            <ProgressBar className={styles.progressBar} percentage={project.done} size={'small'} />\r\n            <div className={styles.line}>\r\n                <Label name={texts.doneText} value={`${project.done}%`} highlighted={false} />\r\n                <Label name={texts.baseWordsText} value={`${project.baseWords}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.teamText} value={`${project.team}`} highlighted={true} />\r\n                <Label name={texts.keysText} value={`${project.keys}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.qaIssuesText} value={`${project.issues}`} highlighted={true} />\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): SummaryStateProps => ({\r\n    texts: projectTexts(state),\r\n});\r\n\r\nexport default connect<SummaryStateProps>(\r\n    mapStateToProps,\r\n)(Summary);\r\n"]},"metadata":{},"sourceType":"module"}