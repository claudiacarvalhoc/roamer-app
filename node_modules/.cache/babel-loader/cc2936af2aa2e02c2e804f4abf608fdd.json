{"ast":null,"code":"import{ADD_PROJECT,ADD_LANGUAGES,REMOVE_TRANSLATION,EXPAND_PROJECTS,COLLAPSE_PROJECTS}from\"../types\";export var addProjectAction=function addProjectAction(project){return{type:ADD_PROJECT,project:project};};export var addLanguagesAction=function addLanguagesAction(projectId,translationsSections){return{type:ADD_LANGUAGES,projectId:projectId,translationsSections:translationsSections};};export var removeTranslationAction=function removeTranslationAction(projectId,translationId){return{type:REMOVE_TRANSLATION,projectId:projectId,translationId:translationId};};export var expandProjectsAction=function expandProjectsAction(){return{type:EXPAND_PROJECTS};};export var collapseProjectAction=function collapseProjectAction(){return{type:COLLAPSE_PROJECTS};};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/actions.ts"],"names":["ADD_PROJECT","ADD_LANGUAGES","REMOVE_TRANSLATION","EXPAND_PROJECTS","COLLAPSE_PROJECTS","addProjectAction","project","type","addLanguagesAction","projectId","translationsSections","removeTranslationAction","translationId","expandProjectsAction","collapseProjectAction"],"mappings":"AAEA,OAASA,WAAT,CAAsBC,aAAtB,CAAqCC,kBAArC,CAAyDC,eAAzD,CAA0EC,iBAA1E,KAAmG,UAAnG,CAuBA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,QAA8C,CAC1EC,IAAI,CAAEP,WADoE,CAE1EM,OAAO,CAAPA,OAF0E,CAA9C,EAAzB,CAKP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAoBC,oBAApB,QAAsF,CACpHH,IAAI,CAAEN,aAD8G,CAEpHQ,SAAS,CAATA,SAFoH,CAGpHC,oBAAoB,CAApBA,oBAHoH,CAAtF,EAA3B,CAMP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACF,SAAD,CAAoBG,aAApB,QAAwE,CAC3GL,IAAI,CAAEL,kBADqG,CAE3GO,SAAS,CAATA,SAF2G,CAG3GG,aAAa,CAAbA,aAH2G,CAAxE,EAAhC,CAMP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,SAA6B,CAC7DN,IAAI,CAAEJ,eADuD,CAA7B,EAA7B,CAIP,MAAO,IAAMW,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAA8B,CAC/DP,IAAI,CAAEH,iBADyD,CAA9B,EAA9B","sourcesContent":["import { Action } from 'redux';\r\nimport { ProjectState, TranslationState } from \"../appState\";\r\nimport { ADD_PROJECT, ADD_LANGUAGES, REMOVE_TRANSLATION, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\r\n\r\nexport interface AddProjectAction extends Action<string> {\r\n    project: ProjectState;\r\n}\r\n\r\nexport interface AddLanguagesAction extends Action<string> {\r\n    projectId: number;\r\n    translationsSections: TranslationState[];\r\n}\r\n\r\nexport interface RemoveTranslationAction extends Action<string> {\r\n    projectId: number;\r\n    translationId: number;\r\n}\r\n\r\nexport interface ExpandProjectsAction extends Action {\r\n}\r\n\r\nexport interface CollapseProjectAction extends Action {\r\n\r\n}\r\n\r\nexport const addProjectAction = (project: ProjectState): AddProjectAction => ({\r\n    type: ADD_PROJECT,\r\n    project,\r\n});\r\n\r\nexport const addLanguagesAction = (projectId: number, translationsSections: TranslationState[]): AddLanguagesAction => ({\r\n    type: ADD_LANGUAGES,\r\n    projectId,\r\n    translationsSections,\r\n});\r\n\r\nexport const removeTranslationAction = (projectId: number, translationId: number): RemoveTranslationAction => ({\r\n    type: REMOVE_TRANSLATION,\r\n    projectId,\r\n    translationId,\r\n});\r\n\r\nexport const expandProjectsAction = (): ExpandProjectsAction => ({\r\n    type: EXPAND_PROJECTS,\r\n});\r\n\r\nexport const collapseProjectAction = (): CollapseProjectAction => ({\r\n    type: COLLAPSE_PROJECTS,\r\n});\r\n\r\nexport type AppActions = AddProjectAction & AddLanguagesAction & RemoveTranslationAction;"]},"metadata":{},"sourceType":"module"}