{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx\";\nimport React from 'react';\n// import cn from 'classnames';\nimport styles from './summary.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../progressbar';\nimport Label from '../label';\nimport Icons from '../icons';\nimport Badge from '../badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Summary = ({\n  project,\n  texts\n}) => {\n  const hasBadges = project.badges.length > 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.summaryTitle,\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      className: styles.progressBar,\n      percentage: project.done,\n      size: 'small'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.doneText,\n        value: `${project.done}%`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.baseWordsText,\n        value: `${project.baseWords}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.teamText,\n        value: `${project.team}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.keysText,\n        value: `${project.keys}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.qaIssuesText,\n        value: `${project.issues}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.iconsLines,\n      children: /*#__PURE__*/_jsxDEV(Icons, {\n        className: styles.icons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.badgesLine,\n      children: hasBadges && project.badges.map(b => /*#__PURE__*/_jsxDEV(Badge, {\n        className: styles.badge,\n        name: b\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Summary;\n\nconst mapStateToProps = state => ({\n  texts: projectTexts(state)\n});\n\nexport default connect(mapStateToProps)(Summary);\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx"],"names":["React","styles","projectTexts","connect","ProgressBar","Label","Icons","Badge","Summary","project","texts","hasBadges","badges","length","summaryTitle","name","progressBar","done","line","doneText","baseWordsText","baseWords","teamText","team","keysText","keys","qaIssuesText","issues","iconsLines","icons","badgesLine","map","b","badge","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\r\nimport { ProjectProperties, ProjectTextsProperties } from '../../redux/appState';\r\nimport { RootState } from '../../redux/reducers';\r\n// import cn from 'classnames';\r\nimport styles from './summary.module.css';\r\nimport { projectTexts } from '../../redux/app/selectors';\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '../progressbar';\r\nimport Label from '../label';\r\nimport Icons from '../icons';\r\nimport { InvalidatedProjectKind } from 'typescript';\r\nimport Badge from '../badge';\r\nimport { strict } from 'assert';\r\n\r\n\r\nexport interface SummaryOwnProps {\r\n    project: ProjectProperties;\r\n}\r\n\r\nexport interface SummaryStateProps {\r\n    texts: ProjectTextsProperties;\r\n}\r\n\r\ntype SummaryProps = SummaryOwnProps & SummaryStateProps;\r\n\r\nconst Summary: FC<SummaryProps> = ({ project, texts }) => {\r\n    const hasBadges = project.badges.length > 0;\r\n    return (\r\n        <>\r\n            <h1 className={styles.summaryTitle}>{project.name}</h1>\r\n            <ProgressBar className={styles.progressBar} percentage={project.done} size={'small'} />\r\n            <div className={styles.line}>\r\n                <Label name={texts.doneText} value={`${project.done}%`} highlighted={false} />\r\n                <Label name={texts.baseWordsText} value={`${project.baseWords}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.teamText} value={`${project.team}`} highlighted={true} />\r\n                <Label name={texts.keysText} value={`${project.keys}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.qaIssuesText} value={`${project.issues}`} highlighted={true} />\r\n            </div>\r\n            <div className={styles.iconsLines}>\r\n                <Icons className={styles.icons} />\r\n            </div>\r\n            <div className={styles.badgesLine}>\r\n                {hasBadges && project.badges.map(b => <Badge className={styles.badge} name={b} />)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): SummaryStateProps => ({\r\n    texts: projectTexts(state),\r\n});\r\n\r\nexport default connect<SummaryStateProps>(\r\n    mapStateToProps,\r\n)(Summary);\r\n"]},"metadata":{},"sourceType":"module"}