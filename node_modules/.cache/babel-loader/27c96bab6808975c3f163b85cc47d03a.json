{"ast":null,"code":"import { ADD_PROJECT, ADD_LANGUAGES, REMOVE_TRANSLATION, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\nexport const addProjectAction = project => ({\n  type: ADD_PROJECT,\n  project\n});\nexport const addLanguagesAction = (projectId, translationsSections) => ({\n  type: ADD_LANGUAGES,\n  projectId,\n  translationsSections\n});\nexport const removeTranslationAction = (projectId, translations) => ({\n  type: REMOVE_TRANSLATION,\n  projectId,\n  translations\n});\nexport const expandProjectsAction = () => ({\n  type: EXPAND_PROJECTS\n});\nexport const collapseProjectAction = () => ({\n  type: COLLAPSE_PROJECTS\n});","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/actions.ts"],"names":["ADD_PROJECT","ADD_LANGUAGES","REMOVE_TRANSLATION","EXPAND_PROJECTS","COLLAPSE_PROJECTS","addProjectAction","project","type","addLanguagesAction","projectId","translationsSections","removeTranslationAction","translations","expandProjectsAction","collapseProjectAction"],"mappings":"AAEA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,kBAArC,EAAyDC,eAAzD,EAA0EC,iBAA1E,QAAmG,UAAnG;AAuBA,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,KAA8C;AAC1EC,EAAAA,IAAI,EAAEP,WADoE;AAE1EM,EAAAA;AAF0E,CAA9C,CAAzB;AAKP,OAAO,MAAME,kBAAkB,GAAG,CAACC,SAAD,EAAoBC,oBAApB,MAAsF;AACpHH,EAAAA,IAAI,EAAEN,aAD8G;AAEpHQ,EAAAA,SAFoH;AAGpHC,EAAAA;AAHoH,CAAtF,CAA3B;AAMP,OAAO,MAAMC,uBAAuB,GAAG,CAACF,SAAD,EAAoBG,YAApB,MAAmF;AACtHL,EAAAA,IAAI,EAAEL,kBADgH;AAEtHO,EAAAA,SAFsH;AAGtHG,EAAAA;AAHsH,CAAnF,CAAhC;AAMP,OAAO,MAAMC,oBAAoB,GAAG,OAA6B;AAC7DN,EAAAA,IAAI,EAAEJ;AADuD,CAA7B,CAA7B;AAIP,OAAO,MAAMW,qBAAqB,GAAG,OAA8B;AAC/DP,EAAAA,IAAI,EAAEH;AADyD,CAA9B,CAA9B","sourcesContent":["import { Action } from 'redux';\r\nimport { ProjectState, TranslationState } from \"../appState\";\r\nimport { ADD_PROJECT, ADD_LANGUAGES, REMOVE_TRANSLATION, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\r\n\r\nexport interface AddProjectAction extends Action<string> {\r\n    project: ProjectState;\r\n}\r\n\r\nexport interface AddLanguagesAction extends Action<string> {\r\n    projectId: number;\r\n    translationsSections: TranslationState[];\r\n}\r\n\r\nexport interface RemoveTranslationAction extends Action<string> {\r\n    projectId: number;\r\n    translations: TranslationState[];\r\n}\r\n\r\nexport interface ExpandProjectsAction extends Action {\r\n}\r\n\r\nexport interface CollapseProjectAction extends Action {\r\n\r\n}\r\n\r\nexport const addProjectAction = (project: ProjectState): AddProjectAction => ({\r\n    type: ADD_PROJECT,\r\n    project,\r\n});\r\n\r\nexport const addLanguagesAction = (projectId: number, translationsSections: TranslationState[]): AddLanguagesAction => ({\r\n    type: ADD_LANGUAGES,\r\n    projectId,\r\n    translationsSections,\r\n});\r\n\r\nexport const removeTranslationAction = (projectId: number, translations: TranslationState[]): RemoveTranslationAction => ({\r\n    type: REMOVE_TRANSLATION,\r\n    projectId,\r\n    translations,\r\n});\r\n\r\nexport const expandProjectsAction = (): ExpandProjectsAction => ({\r\n    type: EXPAND_PROJECTS,\r\n});\r\n\r\nexport const collapseProjectAction = (): CollapseProjectAction => ({\r\n    type: COLLAPSE_PROJECTS,\r\n});\r\n\r\nexport type AppActions = AddProjectAction & AddLanguagesAction & RemoveTranslationAction;"]},"metadata":{},"sourceType":"module"}