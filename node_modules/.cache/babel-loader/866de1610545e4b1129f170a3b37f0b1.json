{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport './styles.css';\nimport Button from '../button';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectProjectText, selectExpandText, selectCollapseText } from '../../slice/menuSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const projectText = useAppSelector(selectProjectText);\n  const expandText = useAppSelector(selectExpandText);\n  const collapseText = useAppSelector(selectCollapseText);\n  const handleNewProjectClick = useCallback(() => {\n    console.log('Clicked handleNewProjectClick!');\n  }, []);\n  const handleExpandAllClick = useCallback(() => {\n    console.log('Clicked andleExpandAllClick!');\n  }, []);\n  const handleCollapseAllClick = useCallback(() => {\n    console.log('Clicked handleCollapseAllClick!');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      text: projectText,\n      onClick: handleNewProjectClick,\n      type: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: expandText,\n      onClick: handleExpandAllClick,\n      type: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: collapseText,\n      onClick: handleCollapseAllClick,\n      type: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"E5/bHVho+dJEz1GTc+BqMj9F+0A=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/menu/index.tsx"],"names":["React","useCallback","Button","useAppSelector","selectProjectText","selectExpandText","selectCollapseText","Menu","props","projectText","expandText","collapseText","handleNewProjectClick","console","log","handleExpandAllClick","handleCollapseAllClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,cAAT,QAA+C,iBAA/C;AACA,SACIC,iBADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,QAIO,uBAJP;;;AAUA,MAAMC,IAA0B,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAMC,WAAW,GAAGN,cAAc,CAACC,iBAAD,CAAlC;AACA,QAAMM,UAAU,GAAGP,cAAc,CAACE,gBAAD,CAAjC;AACA,QAAMM,YAAY,GAAGR,cAAc,CAACG,kBAAD,CAAnC;AAEA,QAAMM,qBAAqB,GAAGX,WAAW,CAAC,MAAM;AAC5CY,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,GAFwC,EAEtC,EAFsC,CAAzC;AAGA,QAAMC,oBAAoB,GAAGd,WAAW,CAAC,MAAM;AAC3CY,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,GAFuC,EAErC,EAFqC,CAAxC;AAGA,QAAME,sBAAsB,GAAGf,WAAW,CAAC,MAAM;AAC7CY,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAFyC,EAEvC,EAFuC,CAA1C;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,IAAI,EAAEL,WADV;AAEI,MAAA,OAAO,EAAEG,qBAFb;AAGI,MAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,MAAD;AACI,MAAA,IAAI,EAAEF,UADV;AAEI,MAAA,OAAO,EAAEK,oBAFb;AAGI,MAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,MAAD;AACI,MAAA,IAAI,EAAEJ,YADV;AAEI,MAAA,OAAO,EAAEK,sBAFb;AAGI,MAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlCD;;GAAMT,I;UACkBJ,c,EACDA,c,EACEA,c;;;KAHnBI,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { FC, useCallback } from 'react';\nimport './styles.css';\nimport Button from '../button';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n    selectProjectText,\n    selectExpandText,\n    selectCollapseText,\n} from '../../slice/menuSlice';\n\n\nexport interface ButtonProperties {\n}\n\nconst Menu: FC<ButtonProperties> = props => {\n    const projectText = useAppSelector(selectProjectText);\n    const expandText = useAppSelector(selectExpandText);\n    const collapseText = useAppSelector(selectCollapseText);\n\n    const handleNewProjectClick = useCallback(() => {\n        console.log('Clicked handleNewProjectClick!');\n    }, []);\n    const handleExpandAllClick = useCallback(() => {\n        console.log('Clicked andleExpandAllClick!');\n    }, []);\n    const handleCollapseAllClick = useCallback(() => {\n        console.log('Clicked handleCollapseAllClick!');\n    }, []);\n\n    return (\n        <div className=\"menu\">\n            <Button\n                text={projectText}\n                onClick={handleNewProjectClick}\n                type='primary'\n            />\n            <Button\n                text={expandText}\n                onClick={handleExpandAllClick}\n                type='secondary'\n            />\n            <Button\n                text={collapseText}\n                onClick={handleCollapseAllClick}\n                type='secondary'\n            />\n        </div>\n    );\n};\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}