{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import styles from'./app.module.css';import Menu from'../menu';import Project from'../project';import{isExpanded,projects}from'../../redux/app/selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var projects=_ref.projects;console.log('render app');var isEmpty=projects.length===0;console.log({isEmpty:isEmpty,projects:projects});return/*#__PURE__*/_jsxs(\"div\",{className:styles.app,children:[/*#__PURE__*/_jsx(Menu,{}),!isEmpty&&projects.map(function(project){return/*#__PURE__*/_jsx(Project,{project:project});})]});};var mapStateToProps=function mapStateToProps(state){return{expand:isExpanded(state),projects:projects(state)};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx"],"names":["React","connect","styles","Menu","Project","isExpanded","projects","App","console","log","isEmpty","length","app","map","project","mapStateToProps","state","expand"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAGA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,2BAArC,C,wFAaA,GAAMC,CAAAA,GAAiB,CAAG,QAApBA,CAAAA,GAAoB,MAAkB,IAAfD,CAAAA,QAAe,MAAfA,QAAe,CAC1CE,OAAO,CAACC,GAAR,CAAY,YAAZ,EACA,GAAMC,CAAAA,OAAO,CAAGJ,QAAQ,CAACK,MAAT,GAAoB,CAApC,CACAH,OAAO,CAACC,GAAR,CAAY,CAAEC,OAAO,CAAPA,OAAF,CAAWJ,QAAQ,CAARA,QAAX,CAAZ,EAEA,mBACE,aAAK,SAAS,CAAEJ,MAAM,CAACU,GAAvB,wBACE,KAAC,IAAD,IADF,CAEG,CAACF,OAAD,EAAYJ,QAAQ,CAACO,GAAT,CAAa,SAAAC,OAAO,qBAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAAJ,EAApB,CAFf,GADF,CAMD,CAXD,CAaA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAsC,CAC5DC,MAAM,CAAEZ,UAAU,CAACW,KAAD,CAD0C,CAE5DV,QAAQ,CAAEA,QAAQ,CAACU,KAAD,CAF0C,CAAtC,EAAxB,CAKA,cAAef,CAAAA,OAAO,CACpBc,eADoB,CAAP,CAEbR,GAFa,CAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProjectProperties } from '../../redux/appState';\r\nimport styles from './app.module.css';\r\nimport Menu from '../menu';\r\nimport Project from '../project';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { isExpanded, projects } from '../../redux/app/selectors';\r\n\r\nexport interface AppOwnProps {\r\n\r\n}\r\n\r\nexport interface AppStateProps {\r\n  expand: boolean;\r\n  projects: ProjectProperties[];\r\n}\r\n\r\nexport type AppProps = AppOwnProps & AppStateProps;\r\n\r\nconst App: FC<AppProps> = ({ projects }) => {\r\n  console.log('render app');\r\n  const isEmpty = projects.length === 0;\r\n  console.log({ isEmpty, projects });\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Menu />\r\n      {!isEmpty && projects.map(project => <Project project={project} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): AppStateProps => ({\r\n  expand: isExpanded(state),\r\n  projects: projects(state),\r\n});\r\n\r\nexport default connect<AppStateProps>(\r\n  mapStateToProps,\r\n)(App);"]},"metadata":{},"sourceType":"module"}