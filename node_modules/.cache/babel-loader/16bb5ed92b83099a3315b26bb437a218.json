{"ast":null,"code":"var projectKey='projects';export var resetStorage=function resetStorage(){clean(projectKey);add(projectKey,[]);};export var addProject=function addProject(project){var projects=get(projectKey);projects.push(project);add(projectKey,projects);};export var getProjects=function getProjects(){return get(projectKey);};var get=function get(key){return JSON.parse(localStorage.get(key));};var add=function add(key,value){localStorage.setItem(key,JSON.stringify(value));};var clean=function clean(key){localStorage.removeItem(key);};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/storage/index.tsx"],"names":["projectKey","resetStorage","clean","add","addProject","project","projects","get","push","getProjects","key","JSON","parse","localStorage","value","setItem","stringify","removeItem"],"mappings":"AACA,GAAMA,CAAAA,UAAU,CAAG,UAAnB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAY,CACpCC,KAAK,CAACF,UAAD,CAAL,CACAG,GAAG,CAACH,UAAD,CAAa,EAAb,CAAH,CACH,CAHM,CAKP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAsC,CAC5D,GAAMC,CAAAA,QAA6B,CAAGC,GAAG,CAACP,UAAD,CAAzC,CACAM,QAAQ,CAACE,IAAT,CAAcH,OAAd,EACAF,GAAG,CAACH,UAAD,CAAaM,QAAb,CAAH,CACH,CAJM,CAMP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA2B,CAClD,MAAOF,CAAAA,GAAG,CAACP,UAAD,CAAV,CACH,CAFM,CAIP,GAAMO,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACG,GAAD,CAAsB,CAC9B,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACN,GAAb,CAAiBG,GAAjB,CAAX,CAAP,CACH,CAFD,CAIA,GAAMP,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACO,GAAD,CAAcI,KAAd,CAAmC,CAC3CD,YAAY,CAACE,OAAb,CAAqBL,GAArB,CAA0BC,IAAI,CAACK,SAAL,CAAeF,KAAf,CAA1B,EACH,CAFD,CAIA,GAAMZ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACQ,GAAD,CAAiB,CAC3BG,YAAY,CAACI,UAAb,CAAwBP,GAAxB,EACH,CAFD","sourcesContent":["import { ProjectProperties } from \"../redux/appState\";\r\nconst projectKey = 'projects';\r\n\r\nexport const resetStorage = (): void => {\r\n    clean(projectKey);\r\n    add(projectKey, []);\r\n};\r\n\r\nexport const addProject = (project: ProjectProperties): void => {\r\n    const projects: ProjectProperties[] = get(projectKey);\r\n    projects.push(project);\r\n    add(projectKey, projects);\r\n};\r\n\r\nexport const getProjects = (): ProjectProperties[] => {\r\n    return get(projectKey);\r\n};\r\n\r\nconst get = (key: string): any => {\r\n    return JSON.parse(localStorage.get(key));\r\n};\r\n\r\nconst add = (key: string, value: any): void => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst clean = (key: string) => {\r\n    localStorage.removeItem(key);\r\n}"]},"metadata":{},"sourceType":"module"}