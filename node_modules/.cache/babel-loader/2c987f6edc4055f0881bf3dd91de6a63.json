{"ast":null,"code":"import{applyMiddleware,compose,createStore}from'redux';import{createLogger}from'redux-logger';import rootReducer from'../reducers/';import thunk from'redux-thunk';export var configureStore=function configureStore(initialState){var logger=createLogger();var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var middleware=[thunk,logger];var store=createStore(rootReducer,initialState,composeEnhancers(applyMiddleware.apply(void 0,middleware)));return store;};export default configureStore;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/store.ts"],"names":["applyMiddleware","compose","createStore","createLogger","rootReducer","thunk","configureStore","initialState","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","store"],"mappings":"AAGA,OAASA,eAAT,CAA0BC,OAA1B,CAAmCC,WAAnC,KAAsD,OAAtD,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAMA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,YAAD,CAAkB,CAC5C,GAAMC,CAAAA,MAAM,CAAGL,YAAY,EAA3B,CACA,GAAMM,CAAAA,gBAAgB,CAAIC,MAAD,CAAgBC,oCAAhB,EAAwDV,OAAjF,CACA,GAAMW,CAAAA,UAAU,CAAG,CAACP,KAAD,CAAQG,MAAR,CAAnB,CAEA,GAAMK,CAAAA,KAAK,CAAGX,WAAW,CACrBE,WADqB,CAErBG,YAFqB,CAGrBE,gBAAgB,CAACT,eAAe,MAAf,QAAmBY,UAAnB,CAAD,CAHK,CAAzB,CAKA,MAAOC,CAAAA,KAAP,CACH,CAXM,CAaP,cAAeP,CAAAA,cAAf","sourcesContent":["import { AnyAction } from 'redux';\r\nimport { AppState } from './appState';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers/';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport type AppThunk<R> = ThunkAction<R, AppState, unknown, AnyAction>;\r\nexport type AppDispatch = ThunkDispatch<AppState, unknown, AnyAction>;\r\n\r\n\r\nexport const configureStore = (initialState) => {\r\n    const logger = createLogger();\r\n    const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const middleware = [thunk, logger];\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(...middleware))\r\n    );\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}