{"ast":null,"code":"import _objectSpread from\"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// import { ActionTypes } from '../types';\nimport{combineReducers}from'redux';import{PROJECT_LOAD_SUCCESS}from\"../types\";import{appInitialState}from'../appState';var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:appInitialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case PROJECT_LOAD_SUCCESS:return _objectSpread(_objectSpread({},state),{},{projects:action.projects});default:return _objectSpread({},state);}};export var reducer=combineReducers({app:appReducer});","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/reducer.ts"],"names":["combineReducers","PROJECT_LOAD_SUCCESS","appInitialState","appReducer","state","action","type","projects","reducer","app"],"mappings":"2MAAA;AACA,OAAkBA,eAAlB,KAAyC,OAAzC,CAEA,OAASC,oBAAT,KAAqC,UAArC,CACA,OAASC,eAAT,KAAgC,aAAhC,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAGJ,IAFXC,CAAAA,KAEW,2DAFOF,eAEP,IADXG,CAAAA,MACW,2CACX,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,oBAAL,CACI,sCACOG,KADP,MAEIG,QAAQ,CAAEF,MAAM,CAACE,QAFrB,GAIJ,QACI,wBACOH,KADP,EAPR,CAWH,CAfD,CAiBA,MAAO,IAAMI,CAAAA,OAAO,CAAGR,eAAe,CAAC,CACnCS,GAAG,CAAEN,UAD8B,CAAD,CAA/B","sourcesContent":["// import { ActionTypes } from '../types';\nimport { Reducer, combineReducers } from 'redux';\nimport { AppActions } from './actions';\nimport { PROJECT_LOAD_SUCCESS } from \"../types\";\nimport { appInitialState } from '../appState';\nimport { AppState } from '../appState';\n\nconst appReducer = (\n    state: AppState = appInitialState,\n    action: AppActions\n): AppState => {\n    switch (action.type) {\n        case PROJECT_LOAD_SUCCESS:\n            return {\n                ...state,\n                projects: action.projects,\n            };\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n\nexport const reducer = combineReducers({\n    app: appReducer as Reducer<AppState>,\n});\n\nexport type RootState = ReturnType<typeof reducer>;\n"]},"metadata":{},"sourceType":"module"}