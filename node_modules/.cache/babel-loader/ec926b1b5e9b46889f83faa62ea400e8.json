{"ast":null,"code":"import { ADD_PROJECT, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\nimport { appInitialState } from '../../redux/initialState'; // const appInitialState: AppState = {\n//     expand: true,\n//     projects: [\n//         projectInitialState\n//     ],\n//     MenuTextsState: {\n//         projectText: 'New project ⇧⌘P',\n//         expandText: 'Expand all',\n//         collapseText: 'Collapse all',\n//     },\n//     projectTexts: {\n//         doneText: 'DONE',\n//         baseWordsText: 'BASE WORDS',\n//         teamText: 'TEAM',\n//         keysText: 'KEYS',\n//         qaIssuesText: 'QA ISSUES',\n//         wordsToDoText: 'WORDS TO DO',\n//         unverifiedText: 'UNVERIFIED',\n//         addLanguageText: 'Add language',\n//     },\n// };\n\nexport const appReducer = (state = appInitialState, action) => {\n  switch (action.type) {\n    case ADD_PROJECT:\n      const id = state.projects.length;\n      const project = { ...action.project,\n        id,\n        name: `${action.project.name} ${id}`\n      };\n      const projects = state.projects.slice();\n      projects.push(project);\n      return { ...state,\n        projects\n      };\n\n    case EXPAND_PROJECTS:\n      return { ...state,\n        expand: true\n      };\n\n    case COLLAPSE_PROJECTS:\n      return { ...state,\n        expand: false\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/reducer.ts"],"names":["ADD_PROJECT","EXPAND_PROJECTS","COLLAPSE_PROJECTS","appInitialState","appReducer","state","action","type","id","projects","length","project","name","slice","push","expand"],"mappings":"AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,iBAAvC,QAAgE,UAAhE;AAEA,SAASC,eAAT,QAAgC,0BAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,CACtBC,KAAe,GAAGF,eADI,EAEtBG,MAFsB,KAGX;AACX,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACI,YAAMQ,EAAE,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAA1B;AACA,YAAMC,OAAO,GAAG,EACZ,GAAGL,MAAM,CAACK,OADE;AAEZH,QAAAA,EAFY;AAGZI,QAAAA,IAAI,EAAG,GAAEN,MAAM,CAACK,OAAP,CAAeC,IAAK,IAAGJ,EAAG;AAHvB,OAAhB;AAKA,YAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeI,KAAf,EAAjB;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcH,OAAd;AACA,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA;AAFG,OAAP;;AAIJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHU,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ,SAAKb,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHU,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGV;AADA,OAAP;AAzBR;AA6BH,CAjCM","sourcesContent":["import { AppActions } from './actions';\r\nimport { ADD_PROJECT, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\r\nimport { AppState } from '../appState';\r\nimport { appInitialState } from '../../redux/initialState';\r\n\r\n// const appInitialState: AppState = {\r\n//     expand: true,\r\n//     projects: [\r\n//         projectInitialState\r\n//     ],\r\n//     MenuTextsState: {\r\n//         projectText: 'New project ⇧⌘P',\r\n//         expandText: 'Expand all',\r\n//         collapseText: 'Collapse all',\r\n//     },\r\n//     projectTexts: {\r\n//         doneText: 'DONE',\r\n//         baseWordsText: 'BASE WORDS',\r\n//         teamText: 'TEAM',\r\n//         keysText: 'KEYS',\r\n//         qaIssuesText: 'QA ISSUES',\r\n//         wordsToDoText: 'WORDS TO DO',\r\n//         unverifiedText: 'UNVERIFIED',\r\n//         addLanguageText: 'Add language',\r\n//     },\r\n// };\r\n\r\nexport const appReducer = (\r\n    state: AppState = appInitialState,\r\n    action: AppActions\r\n): AppState => {\r\n    switch (action.type) {\r\n        case ADD_PROJECT:\r\n            const id = state.projects.length;\r\n            const project = {\r\n                ...action.project,\r\n                id,\r\n                name: `${action.project.name} ${id}`,\r\n            };\r\n            const projects = state.projects.slice();\r\n            projects.push(project);\r\n            return {\r\n                ...state,\r\n                projects\r\n            };\r\n        case EXPAND_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: true,\r\n            };\r\n        case COLLAPSE_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: false,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}