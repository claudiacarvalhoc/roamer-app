{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx\";\nimport React from 'react';\n// import cn from 'classnames';\n// import styles from './project.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Summary = ({\n  project,\n  texts\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: 'Progress Bar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Summary;\n\nconst mapStateToProps = state => ({\n  texts: projectTexts(state)\n});\n\nexport default connect(mapStateToProps)(Summary);\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx"],"names":["React","projectTexts","connect","Summary","project","texts","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAGA;AACA;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAcA,MAAMC,OAA4B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACzD,sBACI;AAAA,4BACI;AAAA,gBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAPD;;KAAMH,O;;AASN,MAAMI,eAAe,GAAIC,KAAD,KAA0C;AAC9DH,EAAAA,KAAK,EAAEJ,YAAY,CAACO,KAAD;AAD2C,CAA1C,CAAxB;;AAIA,eAAeN,OAAO,CAClBK,eADkB,CAAP,CAEbJ,OAFa,CAAf","sourcesContent":["import React, { FC } from 'react';\nimport { ProjectProperties, ProjectTextsProperties } from '../../redux/appState';\nimport { RootState } from '../../redux/reducers';\n// import cn from 'classnames';\n// import styles from './project.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\n\n\nexport interface SummaryOwnProps {\n    project: ProjectProperties;\n}\n\nexport interface SummaryStateProps {\n    texts: ProjectTextsProperties;\n}\n\n\ntype SummaryProps = SummaryOwnProps & SummaryStateProps;\n\nconst Summary: FC<SummaryOwnProps> = ({ project, texts }) => {\n    return (\n        <>\n            <p>{project.name}</p>\n            <p>{'Progress Bar'}</p>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: RootState): SummaryStateProps => ({\n    texts: projectTexts(state),\n});\n\nexport default connect<SummaryStateProps>(\n    mapStateToProps,\n)(Summary);\n"]},"metadata":{},"sourceType":"module"}