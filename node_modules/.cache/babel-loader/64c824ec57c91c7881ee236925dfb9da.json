{"ast":null,"code":"import _regeneratorRuntime from\"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{initialSetup,fetchProjects}from'../api';var initialState={title:'Roamer App',expand:false,status:'idle'};export var appSetupAsync=createAsyncThunk('app/setup',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return initialSetup();case 2:case\"end\":return _context.stop();}}},_callee);})));export var getProjectsAsync=createAsyncThunk('app/fetchProjects',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchProjects();case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);})));export var appSlice=createSlice({name:'app',initialState:initialState,reducers:{expand:function expand(state){state.expand=true;},collapse:function collapse(state){state.expand=false;}}// The `extraReducers` field lets the slice handle actions defined elsewhere,\n// including actions generated by createAsyncThunk or in other slices.\n// extraReducers: (builder) => {\n//     builder\n//         .addCase(incrementAsync.pending, (state) => {\n//             state.status = 'loading';\n//         })\n//         .addCase(incrementAsync.fulfilled, (state, action) => {\n//             state.status = 'idle';\n//             state.value += action.payload;\n//         });\n// },\n});var _appSlice$actions=appSlice.actions,expand=_appSlice$actions.expand,collapse=_appSlice$actions.collapse;export{expand,collapse};export var selectExpand=function selectExpand(state){return state.app.expand;};export var selectAppTitle=function selectAppTitle(state){return state.app.title;};export default appSlice.reducer;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/slice/appSlice.ts"],"names":["createAsyncThunk","createSlice","initialSetup","fetchProjects","initialState","title","expand","status","appSetupAsync","getProjectsAsync","appSlice","name","reducers","state","collapse","actions","selectExpand","app","selectAppTitle","reducer"],"mappings":"qZAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA6D,kBAA7D,CAEA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,QAA5C,CAQA,GAAMC,CAAAA,YAAsB,CAAG,CAC3BC,KAAK,CAAE,YADoB,CAE3BC,MAAM,CAAE,KAFmB,CAG3BC,MAAM,CAAE,MAHmB,CAA/B,CAMA,MAAO,IAAMC,CAAAA,aAAa,CAAGR,gBAAgB,CACzC,WADyC,sEAEzC,yJACUE,CAAAA,YAAY,EADtB,uDAFyC,GAAtC,CAOP,MAAO,IAAMO,CAAAA,gBAAgB,CAAGT,gBAAgB,CAC5C,mBAD4C,sEAE5C,+JACiBG,CAAAA,aAAa,EAD9B,iHAF4C,GAAzC,CAOP,MAAO,IAAMO,CAAAA,QAAQ,CAAGT,WAAW,CAAC,CAChCU,IAAI,CAAE,KAD0B,CAEhCP,YAAY,CAAZA,YAFgC,CAGhCQ,QAAQ,CAAE,CACNN,MAAM,CAAE,gBAACO,KAAD,CAAW,CACfA,KAAK,CAACP,MAAN,CAAe,IAAf,CACH,CAHK,CAINQ,QAAQ,CAAE,kBAACD,KAAD,CAAW,CACjBA,KAAK,CAACP,MAAN,CAAe,KAAf,CACH,CANK,CAQV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBgC,CAAD,CAA5B,CAyBA,sBAA6BI,QAAQ,CAACK,OAAtC,CAAQT,MAAR,mBAAQA,MAAR,CAAgBQ,QAAhB,mBAAgBA,QAAhB,C,wBAEP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,QAAsBA,CAAAA,KAAK,CAACI,GAAN,CAAUX,MAAhC,EAArB,CACP,MAAO,IAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACL,KAAD,QAAsBA,CAAAA,KAAK,CAACI,GAAN,CAAUZ,KAAhC,EAAvB,CAEP,cAAeK,CAAAA,QAAQ,CAACS,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../app/store';\r\nimport { initialSetup, fetchProjects } from '../api';\r\n\r\nexport interface AppState {\r\n    title: string;\r\n    expand: boolean;\r\n    status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: AppState = {\r\n    title: 'Roamer App',\r\n    expand: false,\r\n    status: 'idle',\r\n};\r\n\r\nexport const appSetupAsync = createAsyncThunk(\r\n    'app/setup',\r\n    async () => {\r\n        await initialSetup();\r\n    }\r\n);\r\n\r\nexport const getProjectsAsync = createAsyncThunk(\r\n    'app/fetchProjects',\r\n    async () => {\r\n        return await fetchProjects();\r\n    }\r\n);\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        expand: (state) => {\r\n            state.expand = true;\r\n        },\r\n        collapse: (state) => {\r\n            state.expand = false;\r\n        },\r\n    },\r\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n    // including actions generated by createAsyncThunk or in other slices.\r\n    // extraReducers: (builder) => {\r\n    //     builder\r\n    //         .addCase(incrementAsync.pending, (state) => {\r\n    //             state.status = 'loading';\r\n    //         })\r\n    //         .addCase(incrementAsync.fulfilled, (state, action) => {\r\n    //             state.status = 'idle';\r\n    //             state.value += action.payload;\r\n    //         });\r\n    // },\r\n});\r\n\r\nexport const { expand, collapse } = appSlice.actions;\r\n\r\nexport const selectExpand = (state: RootState) => state.app.expand;\r\nexport const selectAppTitle = (state: RootState) => state.app.title;\r\n\r\nexport default appSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}