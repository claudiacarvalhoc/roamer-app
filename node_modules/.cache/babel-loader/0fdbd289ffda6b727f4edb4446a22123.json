{"ast":null,"code":"import { initialSetup, fetchProjects, createProject } from '../api';\nimport { projectsLoadSuccess } from './app/actions';\nexport const getProjects = () => {\n  return dispatch => {\n    initialSetup();\n    const projects = fetchProjects();\n    dispatch(projectsLoadSuccess(projects));\n    return Promise.resolve();\n  };\n};\nexport const createProjects = () => {\n  return dispatch => {\n    createProject();\n    const projects = fetchProjects();\n    dispatch(projectsLoadSuccess(projects));\n    return Promise.resolve();\n  };\n};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/fetch.ts"],"names":["initialSetup","fetchProjects","createProject","projectsLoadSuccess","getProjects","dispatch","projects","Promise","resolve","createProjects"],"mappings":"AACA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,aAAtC,QAA2D,QAA3D;AACA,SAASC,mBAAT,QAAoC,eAApC;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAkD;AACzE,SAAOC,QAAQ,IAAI;AACfL,IAAAA,YAAY;AACZ,UAAMM,QAA6B,GAAGL,aAAa,EAAnD;AAEAI,IAAAA,QAAQ,CAACF,mBAAmB,CAACG,QAAD,CAApB,CAAR;AAEA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,cAAc,GAAG,MAAkD;AAC5E,SAAOJ,QAAQ,IAAI;AACfH,IAAAA,aAAa;AAEb,UAAMI,QAA6B,GAAGL,aAAa,EAAnD;AACAI,IAAAA,QAAQ,CAACF,mBAAmB,CAACG,QAAD,CAApB,CAAR;AAEA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH,GAPD;AAQH,CATM","sourcesContent":["import { AppDispatch } from './store';\nimport { initialSetup, fetchProjects, createProject } from '../api';\nimport { projectsLoadSuccess } from './app/actions';\nimport { ProjectProperties } from './appState';\n\n\nexport const getProjects = (): ((dispatch: AppDispatch) => Promise<void>) => {\n    return dispatch => {\n        initialSetup();\n        const projects: ProjectProperties[] = fetchProjects();\n\n        dispatch(projectsLoadSuccess(projects));\n\n        return Promise.resolve();\n    };\n};\n\nexport const createProjects = (): ((dispatch: AppDispatch) => Promise<void>) => {\n    return dispatch => {\n        createProject();\n\n        const projects: ProjectProperties[] = fetchProjects();\n        dispatch(projectsLoadSuccess(projects));\n\n        return Promise.resolve();\n    };\n};"]},"metadata":{},"sourceType":"module"}