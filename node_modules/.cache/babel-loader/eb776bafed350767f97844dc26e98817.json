{"ast":null,"code":"import React from'react';import cn from'classnames';import styles from'./card.module.css';import{projectTexts}from'../../redux/app/selectors';import{connect}from'react-redux';import Language from'../language';import ProgressBar from'../progressbar';import Label from'../label';import Icons from'../icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Card=function Card(_ref){var className=_ref.className,translation=_ref.translation,texts=_ref.texts,onDeleteClick=_ref.onDeleteClick;return/*#__PURE__*/_jsxs(\"div\",{className:cn(className,styles.container),children:[/*#__PURE__*/_jsx(Language,{name:translation.language,flag:translation.country}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return onDeleteClick(translation.id);},children:/*#__PURE__*/_jsx(Icons,{className:styles.trash,types:['trash']})}),/*#__PURE__*/_jsx(ProgressBar,{className:styles.progressBar,percentage:translation.done}),/*#__PURE__*/_jsxs(\"div\",{className:styles.labels,children:[/*#__PURE__*/_jsx(Label,{name:texts.doneText,value:\"\".concat(translation.done,\"%\"),highlighted:false}),/*#__PURE__*/_jsx(Label,{name:texts.wordsToDoText,value:\"\".concat(translation.wordsToDo),highlighted:true}),/*#__PURE__*/_jsx(Label,{name:texts.unverifiedText,value:\"\".concat(translation.unverified),highlighted:true})]})]});};var mapStateToProps=function mapStateToProps(state){return{texts:projectTexts(state)};};export default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/card/index.tsx"],"names":["React","cn","styles","projectTexts","connect","Language","ProgressBar","Label","Icons","Card","className","translation","texts","onDeleteClick","container","language","country","id","trash","progressBar","done","labels","doneText","wordsToDoText","wordsToDo","unverifiedText","unverified","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA0B,OAA1B,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,YAAT,KAA6B,2BAA7B,CAGA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,wFAcA,GAAMC,CAAAA,IAAmB,CAAG,QAAtBA,CAAAA,IAAsB,MAAsD,IAAnDC,CAAAA,SAAmD,MAAnDA,SAAmD,CAAxCC,WAAwC,MAAxCA,WAAwC,CAA3BC,KAA2B,MAA3BA,KAA2B,CAApBC,aAAoB,MAApBA,aAAoB,CAC9E,mBAAQ,aAAK,SAAS,CAAEZ,EAAE,CAACS,SAAD,CAAYR,MAAM,CAACY,SAAnB,CAAlB,wBACJ,KAAC,QAAD,EAAU,IAAI,CAAEH,WAAW,CAACI,QAA5B,CAAsC,IAAI,CAAEJ,WAAW,CAACK,OAAxD,EADI,cAEJ,YAAK,OAAO,CAAE,yBAAMH,CAAAA,aAAa,CAACF,WAAW,CAACM,EAAb,CAAnB,EAAd,uBACI,KAAC,KAAD,EAAO,SAAS,CAAEf,MAAM,CAACgB,KAAzB,CAAgC,KAAK,CAAE,CAAC,OAAD,CAAvC,EADJ,EAFI,cAKJ,KAAC,WAAD,EAAa,SAAS,CAAEhB,MAAM,CAACiB,WAA/B,CAA4C,UAAU,CAAER,WAAW,CAACS,IAApE,EALI,cAMJ,aAAK,SAAS,CAAElB,MAAM,CAACmB,MAAvB,wBACI,KAAC,KAAD,EAAO,IAAI,CAAET,KAAK,CAACU,QAAnB,CAA6B,KAAK,WAAKX,WAAW,CAACS,IAAjB,KAAlC,CAA4D,WAAW,CAAE,KAAzE,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAER,KAAK,CAACW,aAAnB,CAAkC,KAAK,WAAKZ,WAAW,CAACa,SAAjB,CAAvC,CAAqE,WAAW,CAAE,IAAlF,EAFJ,cAGI,KAAC,KAAD,EAAO,IAAI,CAAEZ,KAAK,CAACa,cAAnB,CAAmC,KAAK,WAAKd,WAAW,CAACe,UAAjB,CAAxC,CAAuE,WAAW,CAAE,IAApF,EAHJ,GANI,GAAR,CAaH,CAdD,CAgBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAuC,CAC3DhB,KAAK,CAAET,YAAY,CAACyB,KAAD,CADwC,CAAvC,EAAxB,CAIA,cAAexB,CAAAA,OAAO,CAClBuB,eADkB,CAAP,CAEblB,IAFa,CAAf","sourcesContent":["import React, { FC } from 'react';\nimport cn from 'classnames';\nimport styles from './card.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { ProjectTextsState, TranslationState } from '../../redux/appState';\nimport { RootState } from '../../redux/reducers';\nimport { connect } from 'react-redux';\nimport Language from '../language';\nimport ProgressBar from '../progressbar';\nimport Label from '../label';\nimport Icons from '../icons';\n\ninterface CardOwnProps {\n    className: string;\n    translation: TranslationState;\n    onDeleteClick: (translationId: number) => void;\n}\n\ninterface CardStateProps {\n    texts: ProjectTextsState;\n}\n\nexport type CardProps = CardOwnProps & CardStateProps;\n\nconst Card: FC<CardProps> = ({ className, translation, texts, onDeleteClick }) => {\n    return (<div className={cn(className, styles.container)}>\n        <Language name={translation.language} flag={translation.country} />\n        <div onClick={() => onDeleteClick(translation.id)}>\n            <Icons className={styles.trash} types={['trash']} />\n        </div>\n        <ProgressBar className={styles.progressBar} percentage={translation.done} />\n        <div className={styles.labels}>\n            <Label name={texts.doneText} value={`${translation.done}%`} highlighted={false} />\n            <Label name={texts.wordsToDoText} value={`${translation.wordsToDo}`} highlighted={true} />\n            <Label name={texts.unverifiedText} value={`${translation.unverified}`} highlighted={true} />\n        </div>\n\n    </div>);\n};\n\nconst mapStateToProps = (state: RootState): CardStateProps => ({\n    texts: projectTexts(state),\n});\n\nexport default connect<CardStateProps>(\n    mapStateToProps,\n)(Card);"]},"metadata":{},"sourceType":"module"}