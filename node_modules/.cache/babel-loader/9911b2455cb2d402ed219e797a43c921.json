{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/icons/index.tsx\";\nimport styles from './icons.module.css';\nimport { UpIcon, DownIcon, CheckIcon, ProfileIcon, RateIcon, CameraIcon, BookIcon, TrashIcon } from './icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Icons = ({\n  className,\n  types\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: className,\n  children: !!types && types.map(type => get(type))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this);\n\n_c = Icons;\n\nconst get = type => {\n  if (type === 'up') {\n    return /*#__PURE__*/_jsxDEV(UpIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'down') {\n    return /*#__PURE__*/_jsxDEV(DownIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'check') {\n    return /*#__PURE__*/_jsxDEV(CheckIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'user') {\n    return /*#__PURE__*/_jsxDEV(ProfileIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'rate') {\n    return /*#__PURE__*/_jsxDEV(RateIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'camera') {\n    return /*#__PURE__*/_jsxDEV(CameraIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'book') {\n    return /*#__PURE__*/_jsxDEV(BookIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (type === 'trash') {\n    return /*#__PURE__*/_jsxDEV(TrashIcon, {\n      className: styles.icon\n    }, `type-${type}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\nexport default Icons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Icons\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/icons/index.tsx"],"names":["styles","UpIcon","DownIcon","CheckIcon","ProfileIcon","RateIcon","CameraIcon","BookIcon","TrashIcon","Icons","className","types","map","type","get","icon"],"mappings":";AACA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SACIC,MADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,UANJ,EAOIC,QAPJ,EAQIC,SARJ,QASO,SATP;;;;AAgBA,MAAMC,KAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,kBAC1B;AAAK,EAAA,SAAS,EAAED,SAAhB;AAAA,YACK,CAAC,CAACC,KAAF,IAAWA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAIC,GAAG,CAACD,IAAD,CAArB;AADhB;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMJ,K;;AAMN,MAAMK,GAAG,GAAID,IAAD,IAAkB;AAC1B,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,wBAAO,QAAC,MAAD;AAA6B,MAAA,SAAS,EAAEb,MAAM,CAACe;AAA/C,OAAc,QAAOF,IAAK,EAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,wBAAO,QAAC,QAAD;AAA+B,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAjD,OAAgB,QAAOF,IAAK,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,OAAb,EAAsB;AAClB,wBAAO,QAAC,SAAD;AAAgC,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAlD,OAAiB,QAAOF,IAAK,EAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,wBAAO,QAAC,WAAD;AAAkC,MAAA,SAAS,EAAEb,MAAM,CAACe;AAApD,OAAmB,QAAOF,IAAK,EAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,wBAAO,QAAC,QAAD;AAA+B,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAjD,OAAgB,QAAOF,IAAK,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,QAAb,EAAuB;AACnB,wBAAO,QAAC,UAAD;AAAiC,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAnD,OAAkB,QAAOF,IAAK,EAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,wBAAO,QAAC,QAAD;AAA+B,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAjD,OAAgB,QAAOF,IAAK,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,IAAI,KAAK,OAAb,EAAsB;AAClB,wBAAO,QAAC,SAAD;AAAgC,MAAA,SAAS,EAAEb,MAAM,CAACe;AAAlD,OAAiB,QAAOF,IAAK,EAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO,qCAAP;AACH,CA1BD;;AA4BA,eAAeJ,KAAf","sourcesContent":["import { FC } from 'react';\nimport styles from './icons.module.css';\nimport {\n    UpIcon,\n    DownIcon,\n    CheckIcon,\n    ProfileIcon,\n    RateIcon,\n    CameraIcon,\n    BookIcon,\n    TrashIcon,\n} from './icons';\n\nexport interface IconsProps {\n    className: string;\n    types: string[];\n}\n\nconst Icons: FC<IconsProps> = ({ className, types }) => (\n    <div className={className}>\n        {!!types && types.map(type => get(type))}\n    </div>\n);\n\nconst get = (type: string) => {\n    if (type === 'up') {\n        return <UpIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'down') {\n        return <DownIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'check') {\n        return <CheckIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'user') {\n        return <ProfileIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'rate') {\n        return <RateIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'camera') {\n        return <CameraIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'book') {\n        return <BookIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    if (type === 'trash') {\n        return <TrashIcon key={`type-${type}`} className={styles.icon} />;\n    }\n    return <></>;\n};\n\nexport default Icons;\n"]},"metadata":{},"sourceType":"module"}