{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/menu/index.tsx\";\nimport React from 'react';\nimport './styles.css';\nimport Button from '../button';\nimport { menuTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\nimport { expandProjectsAction, collapseProjectAction } from '../../redux/app/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = ({\n  projectText,\n  expandText,\n  collapseText,\n  addProject,\n  expand,\n  collapse\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"data-test\": \"button-new-project\",\n      text: projectText,\n      onClick: () => addProject(),\n      type: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      \"data-test\": \"button-expand\",\n      text: expandText,\n      onClick: () => expand(),\n      type: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      \"data-test\": \"button-collapse\",\n      text: collapseText,\n      onClick: () => collapse(),\n      type: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Menu;\n\nconst mapStateToProps = state => {\n  const texts = menuTexts(state);\n  return {\n    projectText: texts.projectText,\n    expandText: texts.expandText,\n    collapseText: texts.collapseText\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProject: () => dispatch(getProjects()),\n  expand: () => dispatch(expandProjectsAction()),\n  collapse: () => dispatch(collapseProjectAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/menu/index.tsx"],"names":["React","Button","menuTexts","connect","expandProjectsAction","collapseProjectAction","Menu","projectText","expandText","collapseText","addProject","expand","collapse","mapStateToProps","state","texts","mapDispatchToProps","dispatch","getProjects"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,yBAA5D;;;AAqBA,MAAMC,IAAmB,GAAG,CAAC;AACzBC,EAAAA,WADyB;AAEzBC,EAAAA,UAFyB;AAGzBC,EAAAA,YAHyB;AAIzBC,EAAAA,UAJyB;AAKzBC,EAAAA,MALyB;AAMzBC,EAAAA;AANyB,CAAD,KAOtB;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AACI,mBAAU,oBADd;AAEI,MAAA,IAAI,EAAEL,WAFV;AAGI,MAAA,OAAO,EAAE,MAAMG,UAAU,EAH7B;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,MAAD;AACI,mBAAU,eADd;AAEI,MAAA,IAAI,EAAEF,UAFV;AAGI,MAAA,OAAO,EAAE,MAAMG,MAAM,EAHzB;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI,QAAC,MAAD;AACI,mBAAU,iBADd;AAEI,MAAA,IAAI,EAAEF,YAFV;AAGI,MAAA,OAAO,EAAE,MAAMG,QAAQ,EAH3B;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA9BD;;KAAMN,I;;AAgCN,MAAMO,eAAe,GAAIC,KAAD,IAAsC;AAC1D,QAAMC,KAAK,GAAGb,SAAS,CAACY,KAAD,CAAvB;AACA,SAAO;AACHP,IAAAA,WAAW,EAAEQ,KAAK,CAACR,WADhB;AAEHC,IAAAA,UAAU,EAAEO,KAAK,CAACP,UAFf;AAGHC,IAAAA,YAAY,EAAEM,KAAK,CAACN;AAHjB,GAAP;AAKH,CAPD;;AASA,MAAMO,kBAAkB,GACpBC,QADuB,KAEF;AACrBP,EAAAA,UAAU,EAAE,MAAMO,QAAQ,CAACC,WAAW,EAAZ,CADL;AAErBP,EAAAA,MAAM,EAAE,MAAMM,QAAQ,CAACb,oBAAoB,EAArB,CAFD;AAGrBQ,EAAAA,QAAQ,EAAE,MAAMK,QAAQ,CAACZ,qBAAqB,EAAtB;AAHH,CAFE,CAA3B;;AAQA,eAAeF,OAAO,CAClBU,eADkB,EAElBG,kBAFkB,CAAP,CAGbV,IAHa,CAAf","sourcesContent":["import React, { FC } from 'react';\nimport './styles.css';\nimport Button from '../button';\nimport { menuTexts } from '../../redux/app/selectors';\nimport { RootState } from '../../redux/reducers';\nimport { connect } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\nimport { expandProjectsAction, collapseProjectAction } from '../../redux/app/actions';\nimport { createProject } from '../../redux/fetch';\n\nexport interface MenuOwnProps {\n\n}\n\nexport interface MenuStateProps {\n    projectText: string;\n    expandText: string;\n    collapseText: string;\n}\n\nexport interface MenuDispatchProps {\n    addProject: () => void;\n    expand: () => void;\n    collapse: () => void;\n}\n\nexport type MenuProps = MenuOwnProps & MenuStateProps & MenuDispatchProps;\n\nconst Menu: FC<MenuProps> = ({\n    projectText,\n    expandText,\n    collapseText,\n    addProject,\n    expand,\n    collapse,\n}) => {\n    return (\n        <div className=\"menu\">\n            <Button\n                data-test=\"button-new-project\"\n                text={projectText}\n                onClick={() => addProject()}\n                type='primary'\n            />\n            <Button\n                data-test=\"button-expand\"\n                text={expandText}\n                onClick={() => expand()}\n                type='secondary'\n            />\n            <Button\n                data-test=\"button-collapse\"\n                text={collapseText}\n                onClick={() => collapse()}\n                type='secondary'\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: RootState): MenuStateProps => {\n    const texts = menuTexts(state);\n    return {\n        projectText: texts.projectText,\n        expandText: texts.expandText,\n        collapseText: texts.collapseText\n    }\n};\n\nconst mapDispatchToProps = (\n    dispatch: AppDispatch\n): MenuDispatchProps => ({\n    addProject: () => dispatch(getProjects()),\n    expand: () => dispatch(expandProjectsAction()),\n    collapse: () => dispatch(collapseProjectAction()),\n});\n\nexport default connect<MenuStateProps, MenuDispatchProps>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Menu);"]},"metadata":{},"sourceType":"module"}