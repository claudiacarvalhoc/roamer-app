{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/progressbar/index.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = ({\n  percentage,\n  size\n}) => {\n  let width = 160;\n\n  if (size === 'small') {\n    width = 160;\n  } else if (size === 'medium') {\n    width = 205;\n  }\n\n  let backgroundColor = '#00695c';\n  const bgcolor = \"#E5E5E5\";\n  const containerStyles = {\n    height: 20,\n    width: '160px',\n    'background-color': \"#e0e0de\",\n    'border-radius': 3,\n    'border-style': 'solid'\n  };\n  const fillerStyles = {\n    width: `${percentage}%`,\n    'background-color': backgroundColor\n  };\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    'font-weight': 'bold'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: fillerStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/progressbar/index.tsx"],"names":["ProgressBar","percentage","size","width","backgroundColor","bgcolor","containerStyles","height","fillerStyles","labelStyles","padding","color"],"mappings":";;;AAQA,MAAMA,WAAiC,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAChE,MAAIC,KAAK,GAAG,GAAZ;;AACA,MAAID,IAAI,KAAK,OAAb,EAAsB;AAClBC,IAAAA,KAAK,GAAG,GAAR;AACH,GAFD,MAEO,IAAID,IAAI,KAAK,QAAb,EAAuB;AAC1BC,IAAAA,KAAK,GAAG,GAAR;AACH;;AACD,MAAIC,eAAe,GAAG,SAAtB;AAEA,QAAMC,OAAO,GAAG,SAAhB;AACA,QAAMC,eAAe,GAAG;AACpBC,IAAAA,MAAM,EAAE,EADY;AAEpBJ,IAAAA,KAAK,EAAE,OAFa;AAGpB,wBAAoB,SAHA;AAIpB,qBAAiB,CAJG;AAKpB,oBAAgB;AALI,GAAxB;AAQA,QAAMK,YAAY,GAAG;AACjBL,IAAAA,KAAK,EAAG,GAAEF,UAAW,GADJ;AAEjB,wBAAoBG;AAFH,GAArB;AAKA,QAAMK,WAAW,GAAG;AAChBC,IAAAA,OAAO,EAAE,CADO;AAEhBC,IAAAA,KAAK,EAAE,OAFS;AAGhB,mBAAe;AAHC,GAApB;AAMA,sBACI;AAAK,IAAA,KAAK,EAAEL,eAAZ;AAAA,2BACI;AAAK,MAAA,KAAK,EAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;KAAMR,W;AAoCN,eAAeA,WAAf","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\n\nexport interface ProgressbarProps {\n    percentage,\n    size: 'medium' | 'small';\n}\n\nconst ProgressBar: FC<ProgressbarProps> = ({ percentage, size }) => {\n    let width = 160;\n    if (size === 'small') {\n        width = 160;\n    } else if (size === 'medium') {\n        width = 205;\n    }\n    let backgroundColor = '#00695c';\n\n    const bgcolor = \"#E5E5E5\";\n    const containerStyles = {\n        height: 20,\n        width: '160px',\n        'background-color': \"#e0e0de\",\n        'border-radius': 3,\n        'border-style': 'solid',\n    }\n\n    const fillerStyles = {\n        width: `${percentage}%`,\n        'background-color': backgroundColor,\n    }\n\n    const labelStyles = {\n        padding: 5,\n        color: 'white',\n        'font-weight': 'bold'\n    }\n\n    return (\n        <div style={containerStyles}>\n            <div style={fillerStyles}></div>\n        </div>\n    );\n};\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}