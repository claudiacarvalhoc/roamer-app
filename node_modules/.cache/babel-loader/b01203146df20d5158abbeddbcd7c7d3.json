{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx\";\nimport React from 'react';\nimport styles from './summary.module.css';\nimport { projectTexts } from '../../redux/app/selectors';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../progressbar';\nimport Label from '../label';\nimport Icons from '../icons';\nimport Badge from '../badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Summary = ({\n  project,\n  texts\n}) => {\n  const hasBadges = project.badges.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.summaryTitle,\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      className: styles.progressBar,\n      percentage: project.done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.doneText,\n        value: `${project.done}%`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.baseWordsText,\n        value: `${project.baseWords}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        name: texts.teamText,\n        value: `${project.team}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.keysText,\n        value: `${project.keys}`,\n        highlighted: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.line,\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        name: texts.qaIssuesText,\n        value: `${project.issues}`,\n        highlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.iconsLines,\n      children: /*#__PURE__*/_jsxDEV(Icons, {\n        className: styles.icons,\n        types: project.icons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), hasBadges && /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-test\": \"summary-badges\",\n      className: styles.badgesLine,\n      children: project.badges.map(badge => /*#__PURE__*/_jsxDEV(Badge, {\n        className: styles.badge,\n        name: badge.name,\n        type: badge.type\n      }, `badge-${badge.name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Summary;\n\nconst mapStateToProps = state => ({\n  texts: projectTexts(state)\n});\n\nexport default connect(mapStateToProps)(Summary);\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/summary/index.tsx"],"names":["React","styles","projectTexts","connect","ProgressBar","Label","Icons","Badge","Summary","project","texts","hasBadges","badges","length","container","summaryTitle","name","progressBar","done","line","doneText","baseWordsText","baseWords","teamText","team","keysText","keys","qaIssuesText","issues","iconsLines","icons","badgesLine","map","badge","type","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\r\nimport { ProjectState, ProjectTextsState } from '../../redux/appState';\r\nimport { RootState } from '../../redux/reducers';\r\nimport styles from './summary.module.css';\r\nimport { projectTexts } from '../../redux/app/selectors';\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '../progressbar';\r\nimport Label from '../label';\r\nimport Icons from '../icons';\r\nimport Badge from '../badge';\r\n\r\ninterface SummaryOwnProps {\r\n    project: ProjectState;\r\n}\r\n\r\ninterface SummaryStateProps {\r\n    texts: ProjectTextsState;\r\n}\r\n\r\nexport type SummaryProps = SummaryOwnProps & SummaryStateProps;\r\n\r\nconst Summary: FC<SummaryProps> = ({ project, texts }) => {\r\n    const hasBadges = project.badges.length > 0;\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1 className={styles.summaryTitle}>{project.name}</h1>\r\n            <ProgressBar className={styles.progressBar} percentage={project.done} />\r\n            <div className={styles.line}>\r\n                <Label name={texts.doneText} value={`${project.done}%`} highlighted={false} />\r\n                <Label name={texts.baseWordsText} value={`${project.baseWords}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.teamText} value={`${project.team}`} highlighted={true} />\r\n                <Label name={texts.keysText} value={`${project.keys}`} highlighted={false} />\r\n            </div>\r\n            <div className={styles.line}>\r\n                <Label name={texts.qaIssuesText} value={`${project.issues}`} highlighted={true} />\r\n            </div>\r\n            <div className={styles.iconsLines}>\r\n                <Icons className={styles.icons} types={project.icons} />\r\n            </div>\r\n            {hasBadges && (\r\n                <div data-test={\"summary-badges\"} className={styles.badgesLine}>\r\n                    {project.badges.map(badge => <Badge key={`badge-${badge.name}`} className={styles.badge} name={badge.name} type={badge.type} />)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): SummaryStateProps => ({\r\n    texts: projectTexts(state),\r\n});\r\n\r\nexport default connect<SummaryStateProps>(\r\n    mapStateToProps,\r\n)(Summary);\r\n"]},"metadata":{},"sourceType":"module"}