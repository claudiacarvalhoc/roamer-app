{"ast":null,"code":"// import { ActionTypes } from '../types';\nimport { PROJECT_LOAD_SUCCESS, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\nimport { projectStub } from '../../stubs/project';\nconst appInitialState = {\n  expand: true,\n  projects: [projectStub],\n  menuTexts: {\n    projectText: 'New project ⇧⌘P',\n    expandText: 'Expand all',\n    collapseText: 'Collapse all'\n  },\n  projectTexts: {\n    doneText: 'DONE',\n    baseWordsText: 'BASE WORDS',\n    teamText: 'TEAM',\n    keysText: 'KEYS',\n    qaIssuesText: 'QA ISSUES',\n    wordsToDoText: 'WORDS TO DO',\n    unverifiedText: 'UNVERIFIED'\n  }\n};\nexport const appReducer = (state = appInitialState, action) => {\n  switch (action.type) {\n    case PROJECT_LOAD_SUCCESS:\n      return { ...state,\n        projects: action.projects\n      };\n\n    case EXPAND_PROJECTS:\n      return { ...state,\n        expand: true\n      };\n\n    case COLLAPSE_PROJECTS:\n      return { ...state,\n        expand: false\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/reducer.ts"],"names":["PROJECT_LOAD_SUCCESS","EXPAND_PROJECTS","COLLAPSE_PROJECTS","projectStub","appInitialState","expand","projects","menuTexts","projectText","expandText","collapseText","projectTexts","doneText","baseWordsText","teamText","keysText","qaIssuesText","wordsToDoText","unverifiedText","appReducer","state","action","type"],"mappings":"AAAA;AAGA,SAASA,oBAAT,EAA+BC,eAA/B,EAAgDC,iBAAhD,QAAyE,UAAzE;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,eAAyB,GAAG;AAC9BC,EAAAA,MAAM,EAAE,IADsB;AAE9BC,EAAAA,QAAQ,EAAE,CACNH,WADM,CAFoB;AAK9BI,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE,iBADN;AAEPC,IAAAA,UAAU,EAAE,YAFL;AAGPC,IAAAA,YAAY,EAAE;AAHP,GALmB;AAU9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,MADA;AAEVC,IAAAA,aAAa,EAAE,YAFL;AAGVC,IAAAA,QAAQ,EAAE,MAHA;AAIVC,IAAAA,QAAQ,EAAE,MAJA;AAKVC,IAAAA,YAAY,EAAE,WALJ;AAMVC,IAAAA,aAAa,EAAE,aANL;AAOVC,IAAAA,cAAc,EAAE;AAPN;AAVgB,CAAlC;AAqBA,OAAO,MAAMC,UAAU,GAAG,CACtBC,KAAe,GAAGhB,eADI,EAEtBiB,MAFsB,KAGX;AACX,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,oBAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHd,QAAAA,QAAQ,EAAEe,MAAM,CAACf;AAFd,OAAP;;AAIJ,SAAKL,eAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHf,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ,SAAKH,iBAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHf,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGe;AADA,OAAP;AAjBR;AAqBH,CAzBM","sourcesContent":["// import { ActionTypes } from '../types';\r\nimport { Reducer, combineReducers } from 'redux';\r\nimport { AppActions } from './actions';\r\nimport { PROJECT_LOAD_SUCCESS, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\r\nimport { AppState } from '../appState';\r\nimport { projectStub } from '../../stubs/project';\r\n\r\nconst appInitialState: AppState = {\r\n    expand: true,\r\n    projects: [\r\n        projectStub\r\n    ],\r\n    menuTexts: {\r\n        projectText: 'New project ⇧⌘P',\r\n        expandText: 'Expand all',\r\n        collapseText: 'Collapse all',\r\n    },\r\n    projectTexts: {\r\n        doneText: 'DONE',\r\n        baseWordsText: 'BASE WORDS',\r\n        teamText: 'TEAM',\r\n        keysText: 'KEYS',\r\n        qaIssuesText: 'QA ISSUES',\r\n        wordsToDoText: 'WORDS TO DO',\r\n        unverifiedText: 'UNVERIFIED',\r\n    },\r\n};\r\n\r\nexport const appReducer = (\r\n    state: AppState = appInitialState,\r\n    action: AppActions\r\n): AppState => {\r\n    switch (action.type) {\r\n        case PROJECT_LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                projects: action.projects,\r\n            };\r\n        case EXPAND_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: true,\r\n            };\r\n        case COLLAPSE_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: false,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}