{"ast":null,"code":"import { ADD_PROJECT, ADD_LANGUAGES, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\nimport { appInitialState } from '../../redux/initialState';\nexport const appReducer = (state = appInitialState, action) => {\n  switch (action.type) {\n    case ADD_PROJECT:\n      const id = state.projects.length + 1;\n      const project = { ...action.project,\n        id,\n        name: `${action.project.name} ${id}`\n      };\n      const projects = state.projects.slice();\n      projects.push(project);\n      return { ...state,\n        projects\n      };\n\n    case ADD_LANGUAGES:\n      const index = state.projects.findIndex(project => project.id === action.projectId);\n      const selectedProject = state.projects[index];\n      selectedProject.translationSections = action.translationsSections;\n      return { ...state,\n        projects: allProjects\n      };\n\n    case EXPAND_PROJECTS:\n      return { ...state,\n        expand: true\n      };\n\n    case COLLAPSE_PROJECTS:\n      return { ...state,\n        expand: false\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/redux/app/reducer.ts"],"names":["ADD_PROJECT","ADD_LANGUAGES","EXPAND_PROJECTS","COLLAPSE_PROJECTS","appInitialState","appReducer","state","action","type","id","projects","length","project","name","slice","push","index","findIndex","projectId","selectedProject","translationSections","translationsSections","allProjects","expand"],"mappings":"AACA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,eAArC,EAAsDC,iBAAtD,QAA+E,UAA/E;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAO,MAAMC,UAAU,GAAG,CACtBC,KAAe,GAAGF,eADI,EAEtBG,MAFsB,KAGX;AACX,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,YAAMS,EAAE,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAAf,GAAwB,CAAnC;AACA,YAAMC,OAAO,GAAG,EACZ,GAAGL,MAAM,CAACK,OADE;AAEZH,QAAAA,EAFY;AAGZI,QAAAA,IAAI,EAAG,GAAEN,MAAM,CAACK,OAAP,CAAeC,IAAK,IAAGJ,EAAG;AAHvB,OAAhB;AAKA,YAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeI,KAAf,EAAjB;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcH,OAAd;AACA,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA;AAFG,OAAP;;AAIJ,SAAKT,aAAL;AACI,YAAMe,KAAK,GAAGV,KAAK,CAACI,QAAN,CAAeO,SAAf,CAAyBL,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeF,MAAM,CAACW,SAA1D,CAAd;AACA,YAAMC,eAAe,GAAGb,KAAK,CAACI,QAAN,CAAeM,KAAf,CAAxB;AACAG,MAAAA,eAAe,CAACC,mBAAhB,GAAsCb,MAAM,CAACc,oBAA7C;AACA,aAAO,EACH,GAAGf,KADA;AAEHI,QAAAA,QAAQ,EAAEY;AAFP,OAAP;;AAIJ,SAAKpB,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHiB,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ,SAAKpB,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHiB,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGjB;AADA,OAAP;AAjCR;AAqCH,CAzCM","sourcesContent":["import { AppActions } from './actions';\r\nimport { ADD_PROJECT, ADD_LANGUAGES, EXPAND_PROJECTS, COLLAPSE_PROJECTS } from \"../types\";\r\nimport { AppState } from '../appState';\r\nimport { appInitialState } from '../../redux/initialState';\r\n\r\nexport const appReducer = (\r\n    state: AppState = appInitialState,\r\n    action: AppActions\r\n): AppState => {\r\n    switch (action.type) {\r\n        case ADD_PROJECT:\r\n            const id = state.projects.length + 1;\r\n            const project = {\r\n                ...action.project,\r\n                id,\r\n                name: `${action.project.name} ${id}`,\r\n            };\r\n            const projects = state.projects.slice();\r\n            projects.push(project);\r\n            return {\r\n                ...state,\r\n                projects\r\n            };\r\n        case ADD_LANGUAGES:\r\n            const index = state.projects.findIndex(project => project.id === action.projectId);\r\n            const selectedProject = state.projects[index];\r\n            selectedProject.translationSections = action.translationsSections;\r\n            return {\r\n                ...state,\r\n                projects: allProjects\r\n            };\r\n        case EXPAND_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: true,\r\n            };\r\n        case COLLAPSE_PROJECTS:\r\n            return {\r\n                ...state,\r\n                expand: false,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}