{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={texts:{doneText:'DONE',baseWordsText:'BASE WORDS',teamText:'TEAM',keysText:'KEYS',qaIssuesText:'QA ISSUES'},projects:[]};export var projectReducer=createSlice({name:'project',initialState:initialState,reducers:{}});// export const { expand, collapse, addProject } = projectReducer.actions;\nexport var selectTexts=function selectTexts(state){return state.project.texts;};export var selectProjects=function selectProjects(state){return state.project.projects;};export default projectReducer.reducer;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/slice/projectSlice.ts"],"names":["createSlice","initialState","texts","doneText","baseWordsText","teamText","keysText","qaIssuesText","projects","projectReducer","name","reducers","selectTexts","state","project","selectProjects","reducer"],"mappings":"AAAA,OAA2BA,WAA3B,KAA6D,kBAA7D,CAwCA,GAAMC,CAAAA,YAAgC,CAAG,CACrCC,KAAK,CAAE,CACHC,QAAQ,CAAE,MADP,CAEHC,aAAa,CAAE,YAFZ,CAGHC,QAAQ,CAAE,MAHP,CAIHC,QAAQ,CAAE,MAJP,CAKHC,YAAY,CAAE,WALX,CAD8B,CAQrCC,QAAQ,CAAE,EAR2B,CAAzC,CAWA,MAAO,IAAMC,CAAAA,cAAc,CAAGT,WAAW,CAAC,CACtCU,IAAI,CAAE,SADgC,CAEtCT,YAAY,CAAZA,YAFsC,CAGtCU,QAAQ,CAAE,EAH4B,CAAD,CAAlC,CAQP;AAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,QAAsBA,CAAAA,KAAK,CAACC,OAAN,CAAcZ,KAApC,EAApB,CACP,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,QAAsBA,CAAAA,KAAK,CAACC,OAAN,CAAcN,QAApC,EAAvB,CAEP,cAAeC,CAAAA,cAAc,CAACO,OAA9B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\n\nexport interface ProjectTextsProperties {\n    doneText: string;\n    baseWordsText: string;\n    teamText: string;\n    keysText: string;\n    qaIssuesText: string;\n}\n\nexport interface IconType {\n    Icon: 'up' | 'down' | 'check' | 'user' | 'rate' | 'camera' | 'book';\n}\n\nexport interface TranslationSectionsProperties {\n    country: string;\n    language: string;\n    done: number;\n    wordsToDo: number;\n    unverified: number;\n}\n\nexport interface ProjectProperties {\n    name: string;\n    done: number;\n    baseWords: number;\n    team: number;\n    keys: number;\n    issues: number;\n    icons: IconType[];\n    tags: string[];\n    translationSections: TranslationSectionsProperties[];\n}\n\nexport interface ProjectsProperties {\n    texts: ProjectTextsProperties;\n    projects: ProjectProperties[];\n}\n\nconst initialState: ProjectsProperties = {\n    texts: {\n        doneText: 'DONE',\n        baseWordsText: 'BASE WORDS',\n        teamText: 'TEAM',\n        keysText: 'KEYS',\n        qaIssuesText: 'QA ISSUES',\n    },\n    projects: [],\n};\n\nexport const projectReducer = createSlice({\n    name: 'project',\n    initialState,\n    reducers: {\n\n    },\n});\n\n// export const { expand, collapse, addProject } = projectReducer.actions;\n\nexport const selectTexts = (state: RootState) => state.project.texts;\nexport const selectProjects = (state: RootState) => state.project.projects;\n\nexport default projectReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}