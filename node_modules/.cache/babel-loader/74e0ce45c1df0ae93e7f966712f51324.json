{"ast":null,"code":"import _defineProperty from\"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Summary from'../summary';import cn from'classnames';import styles from'./project.module.css';import Divider from'../divider';import Card from'../card';import{connect}from'react-redux';import{isExpanded,projectTexts}from'../../redux/app/selectors';import Button from'../button';import Modal from'../modal';import Select from'react-select';import{addLanguages,removeTranslation as _removeTranslation}from'../../redux/fetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Project=function Project(props){var className=props.className,isExpanded=props.isExpanded,addLanguageText=props.addLanguageText,modalTitleText=props.modalTitleText,closeButtonText=props.closeButtonText,addButtonText=props.addButtonText,languagesOptions=props.languagesOptions,project=props.project,addSelectedLanguages=props.addSelectedLanguages,removeTranslation=props.removeTranslation;var translationSections=project.translationSections;var isTranslationEmpty=translationSections.length===0;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalVisible=_useState2[0],setModalVisibility=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedLanguages=_useState4[0],setSelectedLanguages=_useState4[1];var handleOpenModal=function handleOpenModal(){setModalVisibility(true);};var handleCloseModal=function handleCloseModal(){setModalVisibility(false);};var handleAddLanguage=function handleAddLanguage(){console.log({selectedLanguages:selectedLanguages});addSelectedLanguages(project,selectedLanguages);handleCloseModal();};return/*#__PURE__*/_jsxs(\"div\",{className:cn(className,styles.container,_defineProperty({},styles.collapsed,!isExpanded)),children:[/*#__PURE__*/_jsx(Summary,{project:project}),isExpanded&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Divider,{\"data-test\":\"project-divider\",className:styles.divider}),/*#__PURE__*/_jsxs(\"div\",{\"data-test\":\"project-translations\",className:styles.cards,children:[!isTranslationEmpty&&translationSections.map(function(translation){return/*#__PURE__*/_jsx(Card,{className:styles.card,translation:translation,onDeleteClick:function onDeleteClick(){return removeTranslation(project.id,translation.id);}},\"translation_\".concat(translation.id));}),/*#__PURE__*/_jsx(Button,{\"data-test\":\"project-add-language\",className:styles.addcard,text:addLanguageText,type:'secondary',onClick:handleOpenModal})]})]}),isModalVisible&&/*#__PURE__*/_jsx(Modal,{\"data-test\":\"project-add-language\",children:/*#__PURE__*/_jsxs(\"div\",{className:styles.modal,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.modalTitle,children:modalTitleText}),/*#__PURE__*/_jsx(\"div\",{className:styles.modalSelect,children:/*#__PURE__*/_jsx(Select,{isMulti:true,options:languagesOptions,onChange:function onChange(value){return setSelectedLanguages(value);}})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.modalButtons,children:[/*#__PURE__*/_jsx(Button,{className:styles.modalButton,text:closeButtonText,type:'secondary',onClick:handleCloseModal}),/*#__PURE__*/_jsx(Button,{className:styles.modalButton,text:addButtonText,type:'primary',onClick:handleAddLanguage})]})]})})]});};var mapStateToProps=function mapStateToProps(state){var texts=projectTexts(state);return{addLanguageText:texts.addLanguageText,isExpanded:isExpanded(state),closeButtonText:texts.closeButtonText,addButtonText:texts.addButtonText,modalTitleText:texts.modalTitleText,languagesOptions:texts.languagesText};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addSelectedLanguages:function addSelectedLanguages(project,languages){return dispatch(addLanguages(project,languages));},removeTranslation:function removeTranslation(projectId,translationId){return dispatch(_removeTranslation(projectId,translationId));}};};export default connect(mapStateToProps,mapDispatchToProps)(Project);","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/project/index.tsx"],"names":["React","useState","Summary","cn","styles","Divider","Card","connect","isExpanded","projectTexts","Button","Modal","Select","addLanguages","removeTranslation","Project","props","className","addLanguageText","modalTitleText","closeButtonText","addButtonText","languagesOptions","project","addSelectedLanguages","translationSections","isTranslationEmpty","length","isModalVisible","setModalVisibility","selectedLanguages","setSelectedLanguages","handleOpenModal","handleCloseModal","handleAddLanguage","console","log","container","collapsed","divider","cards","map","translation","card","id","addcard","modal","modalTitle","modalSelect","value","modalButtons","modalButton","mapStateToProps","state","texts","languagesText","mapDispatchToProps","dispatch","languages","projectId","translationId"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { LanguageState, ProjectState } from '../../redux/appState';\r\nimport Summary from '../summary';\r\nimport cn from 'classnames';\r\nimport styles from './project.module.css';\r\nimport Divider from '../divider';\r\nimport Card from '../card';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { connect } from 'react-redux';\r\nimport { isExpanded, projectTexts } from '../../redux/app/selectors';\r\nimport Button from '../button';\r\nimport Modal from '../modal';\r\nimport Select from 'react-select'\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { addLanguages, removeTranslation } from '../../redux/fetch';\r\n\r\nexport interface ProjectOwnProps {\r\n    className: string;\r\n    project: ProjectState;\r\n}\r\n\r\ninterface ProjectStateProps {\r\n    isExpanded: boolean;\r\n    addLanguageText: string;\r\n    modalTitleText: string;\r\n    closeButtonText: string;\r\n    addButtonText: string;\r\n    languagesOptions: LanguageState[];\r\n}\r\n\r\ninterface ProjectDispatchProps {\r\n    addSelectedLanguages: (project: ProjectState, selectedLanguages: LanguageState[]) => void;\r\n    removeTranslation: (projectId: number, translationId: number) => void;\r\n}\r\n\r\nexport type ProjectProps = ProjectOwnProps & ProjectStateProps & ProjectDispatchProps;\r\n\r\nconst Project: FC<ProjectProps> = (props) => {\r\n    const {\r\n        className,\r\n        isExpanded,\r\n        addLanguageText,\r\n        modalTitleText,\r\n        closeButtonText,\r\n        addButtonText,\r\n        languagesOptions,\r\n        project,\r\n        addSelectedLanguages,\r\n        removeTranslation,\r\n    } = props;\r\n    const { translationSections } = project;\r\n    const isTranslationEmpty = translationSections.length === 0;\r\n    const [isModalVisible, setModalVisibility] = useState(false);\r\n    const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n    const handleOpenModal = (): void => {\r\n        setModalVisibility(true);\r\n    };\r\n    const handleCloseModal = (): void => {\r\n        setModalVisibility(false);\r\n    };\r\n    const handleAddLanguage = (): void => {\r\n        console.log({\r\n            selectedLanguages\r\n        });\r\n        addSelectedLanguages(project, selectedLanguages);\r\n        handleCloseModal();\r\n    };\r\n    return (\r\n        <div className={cn(className, styles.container, {\r\n            [styles.collapsed]: !isExpanded\r\n        })}>\r\n            <Summary project={project} />\r\n            {isExpanded && (\r\n                <>\r\n                    <Divider data-test=\"project-divider\" className={styles.divider} />\r\n                    <div data-test=\"project-translations\" className={styles.cards}>\r\n                        {!isTranslationEmpty && translationSections.map(translation => <Card key={`translation_${translation.id}`} className={styles.card} translation={translation} onDeleteClick={() => removeTranslation(project.id, translation.id)} />)}\r\n                        <Button data-test=\"project-add-language\" className={styles.addcard} text={addLanguageText} type={'secondary'} onClick={handleOpenModal} />\r\n                    </div>\r\n                </>)\r\n            }\r\n            {isModalVisible && (\r\n                <Modal data-test=\"project-add-language\">\r\n                    <div className={styles.modal}>\r\n                        <h2 className={styles.modalTitle} >{modalTitleText}</h2>\r\n                        <div className={styles.modalSelect}>\r\n                            <Select\r\n                                isMulti\r\n                                options={languagesOptions}\r\n                                onChange={(value) => setSelectedLanguages(value)}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.modalButtons}>\r\n                            <Button className={styles.modalButton} text={closeButtonText} type={'secondary'} onClick={handleCloseModal} />\r\n                            <Button className={styles.modalButton} text={addButtonText} type={'primary'} onClick={handleAddLanguage} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: RootState): ProjectStateProps => {\r\n    const texts = projectTexts(state);\r\n    return {\r\n        addLanguageText: texts.addLanguageText,\r\n        isExpanded: isExpanded(state),\r\n        closeButtonText: texts.closeButtonText,\r\n        addButtonText: texts.addButtonText,\r\n        modalTitleText: texts.modalTitleText,\r\n        languagesOptions: texts.languagesText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: AppDispatch\r\n): ProjectDispatchProps => ({\r\n    addSelectedLanguages: (project: ProjectState, languages: LanguageState[]) => dispatch(addLanguages(project, languages)),\r\n    removeTranslation: (projectId: number, translationId: number) => dispatch(removeTranslation(projectId, translationId)),\r\n});\r\n\r\nexport default connect<ProjectStateProps, ProjectDispatchProps>(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Project);\r\n"]},"metadata":{},"sourceType":"module"}