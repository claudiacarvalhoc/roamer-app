{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  texts: {\n    doneText: 'DONE',\n    baseWordsText: 'BASE WORDS',\n    teamText: 'TEAM',\n    keysText: 'KEYS',\n    qaIssuesText: 'QA ISSUES'\n  },\n  projects: []\n};\nexport const projectReducer = createSlice({\n  name: 'project',\n  initialState,\n  reducers: {}\n}); // export const { expand, collapse, addProject } = projectReducer.actions;\n\nexport const selectTexts = state => state.project.texts;\nexport const selectProjects = state => state.project.projects;\nexport default projectReducer.reducer;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/slice/projectSlice.ts"],"names":["createSlice","initialState","texts","doneText","baseWordsText","teamText","keysText","qaIssuesText","projects","projectReducer","name","reducers","selectTexts","state","project","selectProjects","reducer"],"mappings":"AAAA,SAA2BA,WAA3B,QAA6D,kBAA7D;AAwCA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,MADP;AAEHC,IAAAA,aAAa,EAAE,YAFZ;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,YAAY,EAAE;AALX,GAD8B;AAQrCC,EAAAA,QAAQ,EAAE;AAR2B,CAAzC;AAWA,OAAO,MAAMC,cAAc,GAAGT,WAAW,CAAC;AACtCU,EAAAA,IAAI,EAAE,SADgC;AAEtCT,EAAAA,YAFsC;AAGtCU,EAAAA,QAAQ,EAAE;AAH4B,CAAD,CAAlC,C,CAQP;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcZ,KAAxD;AACP,OAAO,MAAMa,cAAc,GAAIF,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcN,QAA3D;AAEP,eAAeC,cAAc,CAACO,OAA9B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\n\nexport interface ProjectTextsProperties {\n    doneText: string;\n    baseWordsText: string;\n    teamText: string;\n    keysText: string;\n    qaIssuesText: string;\n}\n\nexport interface IconType {\n    Icon: 'up' | 'down' | 'check' | 'user' | 'rate' | 'camera' | 'book';\n}\n\nexport interface TranslationSectionsProperties {\n    country: string;\n    language: string;\n    done: number;\n    wordsToDo: number;\n    unverified: number;\n}\n\nexport interface ProjectProperties {\n    name: string;\n    done: number;\n    baseWords: number;\n    team: number;\n    keys: number;\n    issues: number;\n    icons: IconType[];\n    tags: string[];\n    translationSections: TranslationSectionsProperties[];\n}\n\nexport interface ProjectsProperties {\n    texts: ProjectTextsProperties;\n    projects: ProjectProperties[];\n}\n\nconst initialState: ProjectsProperties = {\n    texts: {\n        doneText: 'DONE',\n        baseWordsText: 'BASE WORDS',\n        teamText: 'TEAM',\n        keysText: 'KEYS',\n        qaIssuesText: 'QA ISSUES',\n    },\n    projects: [],\n};\n\nexport const projectReducer = createSlice({\n    name: 'project',\n    initialState,\n    reducers: {\n\n    },\n});\n\n// export const { expand, collapse, addProject } = projectReducer.actions;\n\nexport const selectTexts = (state: RootState) => state.project.texts;\nexport const selectProjects = (state: RootState) => state.project.projects;\n\nexport default projectReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}