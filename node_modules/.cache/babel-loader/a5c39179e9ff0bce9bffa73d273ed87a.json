{"ast":null,"code":"import cn from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";var RED_HEX_CODE='#DB1F35';var YELLOW_HEX_CODE='#FFC400';var BLUE_HEX_CODE='#5489DC';var ProgressBar=function ProgressBar(_ref){var className=_ref.className,percentage=_ref.percentage;var containerStyle={height:0,width:'100%','border':'2px solid #CFCFCF'};var progressStyle={width:\"\".concat(percentage,\"%\"),'border':\"2px solid \".concat(getColor(percentage)),marginTop:'-2px',marginLeft:'-2px'};return/*#__PURE__*/_jsx(\"div\",{className:cn(className),children:/*#__PURE__*/_jsx(\"div\",{style:containerStyle,children:/*#__PURE__*/_jsx(\"div\",{style:progressStyle})})});};var getColor=function getColor(percentage){if(percentage>0&&percentage<25){return RED_HEX_CODE;}if(percentage>=20&&percentage<70){return YELLOW_HEX_CODE;}if(percentage>=70&&percentage<=100){return BLUE_HEX_CODE;}return RED_HEX_CODE;};export default ProgressBar;","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/progressbar/index.tsx"],"names":["cn","RED_HEX_CODE","YELLOW_HEX_CODE","BLUE_HEX_CODE","ProgressBar","className","percentage","containerStyle","height","width","progressStyle","getColor","marginTop","marginLeft"],"mappings":"AACA,MAAOA,CAAAA,EAAP,KAAe,YAAf,C,2CAOA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CACA,GAAMC,CAAAA,eAAe,CAAG,SAAxB,CACA,GAAMC,CAAAA,aAAa,CAAG,SAAtB,CAEA,GAAMC,CAAAA,WAAiC,CAAG,QAApCA,CAAAA,WAAoC,MAA+B,IAA5BC,CAAAA,SAA4B,MAA5BA,SAA4B,CAAjBC,UAAiB,MAAjBA,UAAiB,CACrE,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,CADW,CAEnBC,KAAK,CAAE,MAFY,CAGnB,SAAU,mBAHS,CAAvB,CAKA,GAAMC,CAAAA,aAAa,CAAG,CAClBD,KAAK,WAAKH,UAAL,KADa,CAElB,6BAAuBK,QAAQ,CAACL,UAAD,CAA/B,CAFkB,CAGlBM,SAAS,CAAE,MAHO,CAIlBC,UAAU,CAAE,MAJM,CAAtB,CAOA,mBACI,YAAK,SAAS,CAAEb,EAAE,CAACK,SAAD,CAAlB,uBACI,YAAK,KAAK,CAAEE,cAAZ,uBACI,YAAK,KAAK,CAAEG,aAAZ,EADJ,EADJ,EADJ,CAOH,CApBD,CAsBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACL,UAAD,CAAwB,CACrC,GAAIA,UAAU,CAAG,CAAb,EAAkBA,UAAU,CAAG,EAAnC,CAAuC,CACnC,MAAOL,CAAAA,YAAP,CACH,CACD,GAAIK,UAAU,EAAI,EAAd,EAAoBA,UAAU,CAAG,EAArC,CAAyC,CACrC,MAAOJ,CAAAA,eAAP,CACH,CACD,GAAII,UAAU,EAAI,EAAd,EAAoBA,UAAU,EAAI,GAAtC,CAA2C,CACvC,MAAOH,CAAAA,aAAP,CACH,CACD,MAAOF,CAAAA,YAAP,CACH,CAXD,CAaA,cAAeG,CAAAA,WAAf","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\n\nexport interface ProgressBarProps {\n    className: string;\n    percentage: number;\n}\n\nconst RED_HEX_CODE = '#DB1F35';\nconst YELLOW_HEX_CODE = '#FFC400';\nconst BLUE_HEX_CODE = '#5489DC';\n\nconst ProgressBar: FC<ProgressBarProps> = ({ className, percentage }) => {\n    const containerStyle = {\n        height: 0,\n        width: '100%',\n        'border': '2px solid #CFCFCF',\n    };\n    const progressStyle = {\n        width: `${percentage}%`,\n        'border': `2px solid ${getColor(percentage)}`,\n        marginTop: '-2px',\n        marginLeft: '-2px',\n    };\n\n    return (\n        <div className={cn(className)}>\n            <div style={containerStyle}>\n                <div style={progressStyle} />\n            </div>\n        </div>\n    );\n};\n\nconst getColor = (percentage: number) => {\n    if (percentage > 0 && percentage < 25) {\n        return RED_HEX_CODE;\n    }\n    if (percentage >= 20 && percentage < 70) {\n        return YELLOW_HEX_CODE;\n    }\n    if (percentage >= 70 && percentage <= 100) {\n        return BLUE_HEX_CODE;\n    }\n    return RED_HEX_CODE;\n}\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}