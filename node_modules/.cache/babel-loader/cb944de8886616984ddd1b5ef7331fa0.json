{"ast":null,"code":"var _jsxFileName = \"/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './app.module.css';\nimport Menu from '../menu';\nimport Project from '../project';\nimport { isExpanded, projects } from '../../redux/app/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  projects,\n  expand\n}) => {\n  const isEmpty = projects.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), !isEmpty && expand && projects.map(project => /*#__PURE__*/_jsxDEV(Project, {\n      project: project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 54\n    }, this)), !isEmpty && expand && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"to be done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  expand: isExpanded(state),\n  projects: projects(state)\n});\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/components/app/index.tsx"],"names":["React","connect","styles","Menu","Project","isExpanded","projects","App","expand","isEmpty","length","app","map","project","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,2BAArC;;;AAaA,MAAMC,GAAiB,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,KAA0B;AAClD,QAAMC,OAAO,GAAGH,QAAQ,CAACI,MAAT,KAAoB,CAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,GAAvB;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACF,OAAD,IAAYD,MAAZ,IAAsBF,QAAQ,CAACM,GAAT,CAAaC,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAxB,CAFzB,EAGG,CAACJ,OAAD,IAAYD,MAAZ,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;KAAMD,G;;AAWN,MAAMO,eAAe,GAAIC,KAAD,KAAsC;AAC5DP,EAAAA,MAAM,EAAEH,UAAU,CAACU,KAAD,CAD0C;AAE5DT,EAAAA,QAAQ,EAAEA,QAAQ,CAACS,KAAD;AAF0C,CAAtC,CAAxB;;AAKA,eAAed,OAAO,CACpBa,eADoB,CAAP,CAEbP,GAFa,CAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProjectProperties } from '../../redux/appState';\r\nimport styles from './app.module.css';\r\nimport Menu from '../menu';\r\nimport Project from '../project';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { RootState } from '../../redux/reducers';\r\nimport { isExpanded, projects } from '../../redux/app/selectors';\r\n\r\nexport interface AppOwnProps {\r\n\r\n}\r\n\r\nexport interface AppStateProps {\r\n  expand: boolean;\r\n  projects: ProjectProperties[];\r\n}\r\n\r\nexport type AppProps = AppOwnProps & AppStateProps;\r\n\r\nconst App: FC<AppProps> = ({ projects, expand }) => {\r\n  const isEmpty = projects.length === 0;\r\n  return (\r\n    <div className={styles.app}>\r\n      <Menu />\r\n      {!isEmpty && expand && projects.map(project => <Project project={project} />)}\r\n      {!isEmpty && expand && <span>to be done</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): AppStateProps => ({\r\n  expand: isExpanded(state),\r\n  projects: projects(state),\r\n});\r\n\r\nexport default connect<AppStateProps>(\r\n  mapStateToProps,\r\n)(App);"]},"metadata":{},"sourceType":"module"}