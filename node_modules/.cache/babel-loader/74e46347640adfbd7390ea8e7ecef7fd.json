{"ast":null,"code":"const projectKey = 'projects';\nexport const setProjects = projects => {\n  clean(projectKey);\n  debugger;\n  add(projectKey, projects);\n};\nexport const addProject = project => {\n  var _get;\n\n  const projects = (_get = get(projectKey)) !== null && _get !== void 0 ? _get : [];\n  projects.push(project);\n  add(projectKey, projects);\n};\nexport const getProjects = () => {\n  return get(projectKey);\n};\n\nconst get = key => {\n  return JSON.parse(localStorage.getItem(key));\n};\n\nconst add = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst clean = key => {\n  localStorage.removeItem(key);\n};","map":{"version":3,"sources":["/Users/claudia.crisostomo/Documents/elvisp/lokalise-challenge/romaer-app-2/roamer-app/src/storage/index.tsx"],"names":["projectKey","setProjects","projects","clean","add","addProject","project","get","push","getProjects","key","JSON","parse","localStorage","getItem","value","setItem","stringify","removeItem"],"mappings":"AACA,MAAMA,UAAU,GAAG,UAAnB;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAyC;AAChEC,EAAAA,KAAK,CAACH,UAAD,CAAL;AACA;AACAI,EAAAA,GAAG,CAACJ,UAAD,EAAaE,QAAb,CAAH;AACH,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAIC,OAAD,IAAsC;AAAA;;AAC5D,QAAMJ,QAA6B,WAAGK,GAAG,CAACP,UAAD,CAAN,uCAAsB,EAAzD;AACAE,EAAAA,QAAQ,CAACM,IAAT,CAAcF,OAAd;AACAF,EAAAA,GAAG,CAACJ,UAAD,EAAaE,QAAb,CAAH;AACH,CAJM;AAMP,OAAO,MAAMO,WAAW,GAAG,MAA2B;AAClD,SAAOF,GAAG,CAACP,UAAD,CAAV;AACH,CAFM;;AAIP,MAAMO,GAAG,GAAIG,GAAD,IAAsB;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAX,CAAP;AACH,CAFD;;AAIA,MAAMN,GAAG,GAAG,CAACM,GAAD,EAAcK,KAAd,KAAmC;AAC3CF,EAAAA,YAAY,CAACG,OAAb,CAAqBN,GAArB,EAA0BC,IAAI,CAACM,SAAL,CAAeF,KAAf,CAA1B;AACH,CAFD;;AAIA,MAAMZ,KAAK,GAAIO,GAAD,IAAiB;AAC3BG,EAAAA,YAAY,CAACK,UAAb,CAAwBR,GAAxB;AACH,CAFD","sourcesContent":["import { ProjectProperties } from \"../redux/appState\";\r\nconst projectKey = 'projects';\r\n\r\nexport const setProjects = (projects: ProjectProperties[]): void => {\r\n    clean(projectKey);\r\n    debugger;\r\n    add(projectKey, projects);\r\n};\r\n\r\nexport const addProject = (project: ProjectProperties): void => {\r\n    const projects: ProjectProperties[] = get(projectKey) ?? [];\r\n    projects.push(project);\r\n    add(projectKey, projects);\r\n};\r\n\r\nexport const getProjects = (): ProjectProperties[] => {\r\n    return get(projectKey);\r\n};\r\n\r\nconst get = (key: string): any => {\r\n    return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nconst add = (key: string, value: any): void => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst clean = (key: string) => {\r\n    localStorage.removeItem(key);\r\n}"]},"metadata":{},"sourceType":"module"}