// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> projects are not loaded when do not have any projects 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(App)>
    <App
      dispatch={[Function]}
      isExpanded={true}
      projects={Array []}
    >
      <div
        className="app"
      >
        <Connect(Menu)>
          <Menu
            addProject={[Function]}
            collapse={[Function]}
            collapseText="Collapse all"
            expand={[Function]}
            expandText="Expand all"
            projectText="New project ⇧⌘P"
          >
            <div
              className="menu"
            >
              <Button
                data-test="button-new-project"
                onClick={[Function]}
                text="New project ⇧⌘P"
                type="primary"
              >
                <button
                  className="button primary"
                  onClick={[Function]}
                >
                  New project ⇧⌘P
                </button>
              </Button>
              <Button
                data-test="button-expand"
                onClick={[Function]}
                text="Expand all"
                type="secondary"
              >
                <button
                  className="button secondary"
                  onClick={[Function]}
                >
                  Expand all
                </button>
              </Button>
              <Button
                data-test="button-collapse"
                onClick={[Function]}
                text="Collapse all"
                type="secondary"
              >
                <button
                  className="button secondary"
                  onClick={[Function]}
                >
                  Collapse all
                </button>
              </Button>
            </div>
          </Menu>
        </Connect(Menu)>
      </div>
    </App>
  </Connect(App)>
</Provider>
`;

exports[`<App /> render correctly when do not have any projects 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(App) />
</ContextProvider>
`;

exports[`<App /> render correctly when there are at least one project 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(App) />
</ContextProvider>
`;
